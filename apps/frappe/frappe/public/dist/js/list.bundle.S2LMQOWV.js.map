{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/frappe/views/treeview.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/ui/listing.html", "../../../../../apps/frappe/frappe/public/js/frappe/model/indicator.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/ui/filters/edit_filter.html", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tags.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/like.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/html/print_template.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/base_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar.html", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar_stat.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_view_permission_restrictions.html", "../../../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js", "../../../../../apps/frappe/frappe/public/js/list.bundle.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/interaction.js", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/views/image/image_view_item_row.html", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/views/image/photoswipe_dom.html", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_board.html", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_column.html", "frappe-html:/home/amreen/erp/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_card.html"],
  "sourcesContent": ["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide(\"frappe.views.trees\");\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function () {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1]),\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\t!frappe.treeview_settings[route[1]] &&\n\t\t\t\t!frappe.meta.get_docfield(route[1], \"is_group\")\n\t\t\t) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n\n\ton_show() {\n\t\t/**\n\t\t * When the the treeview is visited using the previous button,\n\t\t * the framework just show the treeview element that is hidden.\n\t\t * Due to this, the data of the tree can be old.\n\t\t * To deal with this, the tree will be refreshed whenever the\n\t\t * treeview is visible.\n\t\t */\n\t\tlet route = frappe.get_route();\n\t\tlet treeview = frappe.views.trees[route[1]];\n\t\ttreeview && treeview.make_tree();\n\t}\n\n\tget view_name() {\n\t\treturn \"Tree\";\n\t}\n};\n\nfrappe.views.TreeView = class TreeView {\n\tconstructor(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = { doctype: me.doctype };\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes = me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\n\t\tif (!this.opts.do_not_setup_menu) {\n\t\t\tthis.set_menu_item();\n\t\t}\n\n\t\tthis.set_primary_action();\n\t}\n\tget_permissions() {\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create =\n\t\t\tfrappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\t\tif (!this.opts || !this.opts.do_not_make_page) {\n\t\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\t\tfrappe.ui.make_app_page({ parent: this.parent, single_column: true });\n\t\t\tthis.page = this.parent.page;\n\t\t\tfrappe.container.change_to(this.page_name);\n\t\t\tfrappe.breadcrumbs.add(\n\t\t\t\tme.opts.breadcrumb || locals.DocType[me.doctype].module,\n\t\t\t\tme.doctype\n\t\t\t);\n\n\t\t\tthis.set_title();\n\n\t\t\tthis.page.main.css({\n\t\t\t\t\"min-height\": \"300px\",\n\t\t\t});\n\n\t\t\tthis.page.main.addClass(\"frappe-card\");\n\t\t} else {\n\t\t\tthis.page = this.opts.page;\n\t\t\t$(this.page[0]).addClass(\"frappe-card\");\n\t\t}\n\n\t\tif (this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__(\"Collapse All\"), function () {\n\t\t\t\tme.tree.load_children(me.tree.root_node, false);\n\t\t\t});\n\n\t\t\tthis.page.add_inner_button(__(\"Expand All\"), function () {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif (this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t}\n\tset_title() {\n\t\tthis.page.set_title(this.opts.title || __(\"{0} Tree\", [__(this.doctype)]));\n\t}\n\tonload() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t}\n\tmake_filters() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = [];\n\t\t$.each(this.opts.filters || [], function (i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function () {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\" + filter.fieldname + \"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t}\n\tget_root() {\n\t\tvar me = this;\n\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tmake_tree() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => {\n\t\t\t\tthis.select_node(node);\n\t\t\t},\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tcur_tree.view_name = \"Tree\";\n\t\tthis.post_render();\n\t}\n\n\trebuild_tree() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\targs: {\n\t\t\t\tdoctype: me.doctype,\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tpost_render() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t}\n\n\tselect_node(node) {\n\t\tvar me = this;\n\t\tif (this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif (this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(\n\t\t\t\tfrappe.render_template(me.opts.view_template, {\n\t\t\t\t\tdata: node.data,\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t})\n\t\t\t).appendTo(this.node_view);\n\t\t}\n\t}\n\tget_toolbar() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel: __(me.can_write ? \"Edit\" : \"Details\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Add Child\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Rename\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif (!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function (new_name) {\n\t\t\t\t\t\tnode.$tree_link.find(\"a\").text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Delete\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn !node.is_root && me.can_delete;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function () {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t];\n\n\t\tif (this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter((btn) => {\n\t\t\t\treturn !me.opts.toolbar.find((d) => d[\"label\"] == btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar);\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar;\n\t\t} else {\n\t\t\treturn toolbar;\n\t\t}\n\t}\n\tnew_node() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif (!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"New {0}\", [__(me.doctype)]),\n\t\t\tfields: me.fields,\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\" + me.doctype.toLowerCase().replace(/ /g, \"_\")] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function () {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif (!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif (node.is_root) {\n\t\t\t\tv[\"is_root\"] = node.is_root;\n\t\t\t} else {\n\t\t\t\tv[\"is_root\"] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__(\"Creating {0}\", [me.doctype]));\n\n\t\t\t$.extend(args, v);\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function () {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t}\n\tprepare_fields() {\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tfieldname: \"is_group\",\n\t\t\t\tlabel: __(\"Group Node\"),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\"),\n\t\t\t},\n\t\t];\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function (d) {\n\t\t\treturn d.reqd || (d.bold && !d.read_only && !!d.is_virtual) ? d : null;\n\t\t});\n\n\t\tvar opts_field_names = this.fields.map(function (d) {\n\t\t\treturn d.fieldname;\n\t\t});\n\n\t\tmandatory_fields.map(function (d) {\n\t\t\tif (\n\t\t\t\t$.inArray(d.fieldname, me.ignore_fields) === -1 &&\n\t\t\t\t$.inArray(d.fieldname, opts_field_names) === -1\n\t\t\t) {\n\t\t\t\tme.fields.push(d);\n\t\t\t}\n\t\t});\n\t}\n\tprint_tree() {\n\t\tif (!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function (print_settings) {\n\t\t\tvar title = __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({ title: title, tree: tree, print_settings: print_settings });\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: \"Print\",\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\tset_primary_action() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(\n\t\t\t\t__(\"New\"),\n\t\t\t\tfunction () {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t}\n\t}\n\tset_menu_item() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"View List\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tfrappe.set_route(\"List\", me.doctype);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Print\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")\n\t\t) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Rebuild Tree\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items);\n\t\t}\n\n\t\t$.each(me.menu_items, function (i, menu_item) {\n\t\t\tvar has_perm = true;\n\t\t\tif (menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n};\n", "\n\tfrappe.templates['listing'] = `<div class=\"frappe-list\">\n\t<div class=\"list-filters\" style=\"display: none;\">\n\t</div>\n\n\t<div style=\"margin-bottom:9px\" class=\"list-toolbar-wrapper hide\">\n\t\t<div class=\"list-toolbar btn-group\" style=\"display:inline-block; margin-right: 10px;\">\n\t\t</div>\n\t</div>\n    <div style=\"clear:both\"></div>\n\t<div class=\"no-result text-center\" style=\"display: none;\">\n\t\t{%= no_result_message %}\n\t</div>\n\t<div class=\"result\">\n\t\t<div class=\"list-headers\"></div>\n        <div class=\"list-loading text-center\">\n        \t{%= frappe.messages.get_waiting_message(__(\"Loading\") + \"...\" ) %}\n        </div>\n\t\t<div class=\"result-list\"></div>\n\t</div>\n\t<div class=\"list-paging-area\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t<div class=\"btn-group btn-group-paging\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-info\" data-value=\"20\">20</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"100\">100</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"500\">500</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6 text-right\">\n\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">{%= _more %}...</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function (doctype) {\n\t// returns true if indicator is present\n\tif (frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if (\n\t\t(frappe.listview_settings[doctype] || {}).get_indicator ||\n\t\tfrappe.workflow.get_state_fieldname(doctype)\n\t) {\n\t\treturn true;\n\t} else if (\n\t\tfrappe.meta.has_field(doctype, \"enabled\") ||\n\t\tfrappe.meta.has_field(doctype, \"disabled\")\n\t) {\n\t\treturn true;\n\t} else if (\n\t\tfrappe.meta.has_field(doctype, \"status\") &&\n\t\tfrappe.get_meta(doctype).states.length\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nfrappe.get_indicator = function (doc, doctype, show_workflow_state) {\n\tif (doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif (!doctype) doctype = doc.doctype;\n\n\tlet meta = frappe.get_meta(doctype);\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow[\"override_status\"] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype);\n\tlet workflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\tlet avoid_status_override = (frappe.workflow.avoid_status_override[doctype] || []).includes(\n\t\tdoc[workflow_fieldname]\n\t);\n\t// workflow\n\tif (\n\t\tworkflow_fieldname &&\n\t\t(!without_workflow || show_workflow_state) &&\n\t\t!avoid_status_override\n\t) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif (value) {\n\t\t\tlet colour = \"\";\n\n\t\t\tif (locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tcolour = {\n\t\t\t\t\tSuccess: \"green\",\n\t\t\t\t\tWarning: \"orange\",\n\t\t\t\t\tDanger: \"red\",\n\t\t\t\t\tPrimary: \"blue\",\n\t\t\t\t\tInverse: \"black\",\n\t\t\t\t\tInfo: \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + \",=,\" + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif (is_submittable && doc.docstatus == 0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif (is_submittable && doc.docstatus == 2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\t// based on document state\n\tif (doc.status && meta && meta.states && meta.states.find((d) => d.title === doc.status)) {\n\t\tlet state = meta.states.find((d) => d.title === doc.status);\n\t\tlet color_class = frappe.scrub(state.color, \"-\");\n\t\treturn [__(doc.status), color_class, \"status,=,\" + doc.status];\n\t}\n\n\tif (settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif (indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif (is_submittable && doc.docstatus == 1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif (doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif (frappe.meta.has_field(doctype, \"enabled\")) {\n\t\tif (doc.enabled) {\n\t\t\treturn [__(\"Enabled\"), \"blue\", \"enabled,=,1\"];\n\t\t} else {\n\t\t\treturn [__(\"Disabled\"), \"grey\", \"enabled,=,0\"];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif (frappe.meta.has_field(doctype, \"disabled\")) {\n\t\tif (doc.disabled) {\n\t\t\treturn [__(\"Disabled\"), \"grey\", \"disabled,=,1\"];\n\t\t} else {\n\t\t\treturn [__(\"Enabled\"), \"blue\", \"disabled,=,0\"];\n\t\t}\n\t}\n};\n", "frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = \"\";\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t[\"=\", __(\"Equals\")],\n\t\t\t[\"!=\", __(\"Not Equals\")],\n\t\t\t[\"like\", __(\"Like\")],\n\t\t\t[\"not like\", __(\"Not Like\")],\n\t\t\t[\"in\", __(\"In\")],\n\t\t\t[\"not in\", __(\"Not In\")],\n\t\t\t[\"is\", __(\"Is\")],\n\t\t\t[\">\", \">\"],\n\t\t\t[\"<\", \"<\"],\n\t\t\t[\">=\", \">=\"],\n\t\t\t[\"<=\", \"<=\"],\n\t\t\t[\"Between\", __(\"Between\")],\n\t\t\t[\"Timespan\", __(\"Timespan\")],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t[\"descendants of\", __(\"Descendants Of\")],\n\t\t\t[\"descendants of (inclusive)\", __(\"Descendants Of (inclusive)\")],\n\t\t\t[\"not descendants of\", __(\"Not Descendants Of\")],\n\t\t\t[\"ancestors of\", __(\"Ancestors Of\")],\n\t\t\t[\"not ancestors of\", __(\"Not Ancestors Of\")],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: [\"like\", \"not like\"],\n\t\t\tDatetime: [\"like\", \"not like\", \"in\", \"not in\", \"=\", \"!=\"],\n\t\t\tData: [\"Between\", \"Timespan\"],\n\t\t\tSelect: [\"like\", \"not like\", \"Between\", \"Timespan\"],\n\t\t\tLink: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\"],\n\t\t\tCurrency: [\"Between\", \"Timespan\"],\n\t\t\tColor: [\"Between\", \"Timespan\"],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== \"=\"),\n\t\t\tCode: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\t\"HTML Editor\": [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\t\"Markdown Editor\": [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\tPassword: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\tRating: [\"like\", \"not like\", \"Between\", \"in\", \"not in\", \"Timespan\"],\n\t\t\tFloat: [\"like\", \"not like\", \"Between\", \"in\", \"not in\", \"Timespan\"],\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template(\"edit_filter\", {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find(\".filter-edit-area\"));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find(\".fieldname-select-area\"),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: \"input-xs\",\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find(\".remove-filter\").on(\"click\", () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find(\".condition\").change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif ([\"in\", \"like\", \"not in\", \"not like\"].includes(condition)) {\n\t\t\t\tfieldtype = \"Data\";\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find(\".filter-description\").empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t[\"Select\", \"MultiSelect\"].includes(this.field.df.fieldtype) &&\n\t\t\t\t[\"in\", \"not in\"].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = \"MultiSelect\";\n\t\t\t}\n\n\t\t\tthis.set_field(this.field.df.parent, this.field.df.fieldname, fieldtype, condition);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || \"name\";\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass(\"new-filter\");\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === \"Check\") {\n\t\t\tvalue = value == 1 ? \"Yes\" : \"No\";\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif ([\"in\", \"not in\"].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(\",\");\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + \"\").trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[fieldname];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tlet setup_field = (field) => {\n\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\tdf.options = field.options;\n\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t};\n\t\t\tif (this.filters_config[condition].data) {\n\t\t\t\tlet field = this.filters_config[condition].data;\n\t\t\t\tsetup_field(field);\n\t\t\t} else {\n\t\t\t\tfrappe.xcall(this.filters_config[condition].get_field, args).then((field) => {\n\t\t\t\t\tthis.filters_config[condition].data = field;\n\t\t\t\t\tsetup_field(field);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area.find(\".filter-field\").empty().get(0);\n\t\tdf.input_class = \"input-xs\";\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on(\"focusout\", () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(\":input\")\n\t\t\t.keydown((e) => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== \"MultiSelect\") {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_selected_label() {\n\t\treturn this.utils.get_selected_label(this.field);\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find(\".condition\").val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find(\".condition\");\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = [\"in\", \"not in\"].includes(condition)\n\t\t\t? __(\"values separated by commas\")\n\t\t\t: __(\"use % as wildcard\");\n\n\t\tthis.filter_edit_area.find(\".filter-description\").html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find(\".active-tag-filters .clear-filters\")\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find(\".remove-filter\").on(\"click\", this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find(\".toggle-filter\");\n\t\tfilter_button.on(\"click\", () => {\n\t\t\tfilter_button.closest(\".tag-filters-area\").find(\".filter-edit-area\").show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find(\".toggle-filter\").html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_label() || this.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(value)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__(\"Edit Filter\")}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__(\"Remove Filter\")}\">\n\t\t\t\t${frappe.utils.icon(\"close\")}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === \"Link\" && frappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === \"docstatus\") {\n\t\t\tvalue = { 0: \"Draft\", 1: \"Submitted\", 2: \"Cancelled\" }[value] || value;\n\t\t} else if (field.df.original_type === \"Check\") {\n\t\t\tvalue = { 0: \"No\", 1: \"Yes\" }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value() || field.value;\n\n\t\tif (typeof val === \"string\") {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == \"is\" && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == \"Check\") {\n\t\t\tval = val == \"Yes\" ? 1 : 0;\n\t\t}\n\n\t\tif ([\"like\", \"not like\"].includes(condition)) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith(\"%\") || val.endsWith(\"%\"))) {\n\t\t\t\tval = \"%\" + val + \"%\";\n\t\t\t}\n\t\t} else if ([\"in\", \"not in\"].includes(condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(\",\").map((v) => strip(v));\n\t\t\t}\n\t\t} else if (frappe.boot.additional_filters_config[condition]) {\n\t\t\tval = field.value || val;\n\t\t}\n\t\tif (val === \"%\") {\n\t\t\tval = \"\";\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_selected_label(field) {\n\t\tif ([\"Link\", \"Dynamic Link\"].includes(field.df.fieldtype)) {\n\t\t\treturn field.get_label_value();\n\t\t}\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == \"Data\") {\n\t\t\treturn \"like\";\n\t\t} else if (df.fieldtype == \"Date\" || df.fieldtype == \"Datetime\") {\n\t\t\treturn \"Between\";\n\t\t} else {\n\t\t\treturn \"=\";\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = \"\";\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == \"docstatus\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __(\"Draft\") },\n\t\t\t\t{ value: 1, label: __(\"Submitted\") },\n\t\t\t\t{ value: 2, label: __(\"Cancelled\") },\n\t\t\t];\n\t\t} else if (df.fieldtype == \"Check\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ label: __(\"Yes\", null, \"Checkbox is checked\"), value: \"Yes\" },\n\t\t\t\t{ label: __(\"No\", null, \"Checkbox is not checked\"), value: \"No\" },\n\t\t\t];\n\t\t} else if (\n\t\t\t[\n\t\t\t\t\"Text\",\n\t\t\t\t\"Small Text\",\n\t\t\t\t\"Text Editor\",\n\t\t\t\t\"Code\",\n\t\t\t\t\"Attach\",\n\t\t\t\t\"Attach Image\",\n\t\t\t\t\"Markdown Editor\",\n\t\t\t\t\"HTML Editor\",\n\t\t\t\t\"Tag\",\n\t\t\t\t\"Phone\",\n\t\t\t\t\"JSON\",\n\t\t\t\t\"Comments\",\n\t\t\t\t\"Barcode\",\n\t\t\t\t\"Dynamic Link\",\n\t\t\t\t\"Read Only\",\n\t\t\t\t\"Assign\",\n\t\t\t\t\"Color\",\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = \"Data\";\n\t\t} else if (\n\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t[\n\t\t\t\t\"=\",\n\t\t\t\t\"!=\",\n\t\t\t\t\"descendants of\",\n\t\t\t\t\"descendants of (inclusive)\",\n\t\t\t\t\"ancestors of\",\n\t\t\t\t\"not descendants of\",\n\t\t\t\t\"not ancestors of\",\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = \"Data\";\n\t\t}\n\t\tif (df.fieldtype === \"Data\" && (df.options || \"\").toLowerCase() === \"email\") {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (condition == \"Between\" && (df.fieldtype == \"Date\" || df.fieldtype == \"Datetime\")) {\n\t\t\tdf.fieldtype = \"DateRange\";\n\t\t}\n\t\tif (\n\t\t\tcondition == \"Timespan\" &&\n\t\t\t[\"Date\", \"Datetime\", \"DateRange\", \"Select\"].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = this.get_timespan_options([\n\t\t\t\t\"Last\",\n\t\t\t\t\"Yesterday\",\n\t\t\t\t\"Today\",\n\t\t\t\t\"Tomorrow\",\n\t\t\t\t\"This\",\n\t\t\t\t\"Next\",\n\t\t\t]);\n\t\t}\n\t\tif (condition === \"is\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ label: __(\"Set\", null, \"Field value is set\"), value: \"set\" },\n\t\t\t\t{ label: __(\"Not Set\", null, \"Field value is not set\"), value: \"not set\" },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: [\"Week\", \"Month\", \"Quarter\", \"6 months\", \"Year\"],\n\t\t\tThis: [\"Week\", \"Month\", \"Quarter\", \"Year\"],\n\t\t\tNext: [\"Week\", \"Month\", \"Quarter\", \"6 months\", \"Year\"],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n", "frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_clear_all_filters_event();\n\t\tthis.set_popover_events();\n\t}\n\n\tset_clear_all_filters_event() {\n\t\tif (!this.filter_x_button) return;\n\n\t\tthis.filter_x_button.on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tif (typeof this.base_list !== \"undefined\") {\n\t\t\t\t// It's a list view. Clear all the filters, also the ones in the\n\t\t\t\t// FilterArea outside this FilterGroup\n\t\t\t\tthis.base_list.filter_area.clear();\n\t\t\t} else {\n\t\t\t\t// Not a list view, just clear the filters in this FilterGroup\n\t\t\t\tthis.clear_filters();\n\t\t\t}\n\t\t\tthis.update_filter_button();\n\t\t});\n\t}\n\n\thide_popover() {\n\t\tthis.filter_button?.popover(\"hide\");\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: \"manual\",\n\t\t\tcontainer: \"body\",\n\t\t\tplacement: \"bottom\",\n\t\t\toffset: \"-100px, 0\",\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper && this.wrapper.find(\".empty-filters\").toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on(\"click\", (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(\":visible\")) {\n\t\t\t\tconst in_datepicker =\n\t\t\t\t\t$(e.target).is(\".datepicker--cell\") ||\n\t\t\t\t\t$(e.target).closest(\".datepicker--nav-title\").length !== 0 ||\n\t\t\t\t\t$(e.target).parents(\".datepicker--nav-action\").length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents(\".filter-popover\").length === 0 &&\n\t\t\t\t\t$(e.target).parents(\".filter-box\").length === 0 &&\n\t\t\t\t\tthis.filter_button.find($(e.target)).length === 0 &&\n\t\t\t\t\t!$(e.target).is(this.filter_button) &&\n\t\t\t\t\t!in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.hide_popover();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on(\"click\", () => {\n\t\t\tthis.filter_button.popover(\"toggle\");\n\t\t});\n\n\t\tthis.filter_button.on(\"shown.bs.popover\", () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $(\".filter-popover\");\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, \"name\");\n\t\t});\n\n\t\tthis.filter_button.on(\"hidden.bs.popover\", () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on(\"change\", () => {\n\t\t\tif (this.wrapper && this.wrapper.is(\":visible\")) {\n\t\t\t\tthis.hide_popover();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach((filter) => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? __(\"Filters <span class='filter-label'>{0}</span>\", [this.filters.length])\n\t\t\t: __(\"Filter\");\n\n\t\tthis.filter_button\n\t\t\t.toggleClass(\"btn-default\", !filters_applied)\n\t\t\t.toggleClass(\"btn-primary-light\", filters_applied);\n\n\t\tthis.filter_button.find(\".filter-icon\").toggleClass(\"active\", filters_applied);\n\n\t\tthis.filter_button.find(\".button-label\").html(button_label);\n\t\tthis.filter_button.attr(\n\t\t\t\"title\",\n\t\t\t`${this.filters.length} Filter${this.filters.length > 1 ? \"s\" : \"\"} Applied`\n\t\t);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find(\".add-filter\").on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, \"name\");\n\t\t});\n\n\t\tthis.wrapper.find(\".clear-filters\").on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t\tthis.hide_popover();\n\t\t});\n\n\t\tthis.wrapper.find(\".apply-filters\").on(\"click\", () => this.hide_popover());\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find(\".new-filter:visible\").length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn promise && promise.then ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (\n\t\t\tdoctype &&\n\t\t\tfieldname &&\n\t\t\t!frappe.meta.has_field(doctype, fieldname) &&\n\t\t\tfrappe.model.is_non_std_field(fieldname)\n\t\t) {\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __(\"Invalid filter: {0}\", [fieldname.bold()]),\n\t\t\t\tindicator: \"red\",\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find((f) => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.some((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\treturn filter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t}\n\t\t\t\treturn frappe.utils.arrays_equal(f_value.slice(0, 4), filter_value.slice(0, 4));\n\t\t\t});\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map((f) => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter((f) => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 && this.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__(\"No filters selected\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons mt-2\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__(\"Add a Filter\")}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__(\"Clear Filters\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${\n\t\t\t\t\t\t\tthis.filter_button\n\t\t\t\t\t\t\t\t? `<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__(\"Apply Filters\")}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`);\n\t}\n\n\tget_filters_as_object() {\n\t\treturn this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters && filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0)) return Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(filters);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n", "// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = class FieldSelect {\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tconstructor(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () {\n\t\t\t\t$(this).select();\n\t\t\t});\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t},\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function (e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif (me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function (e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif (this.filter_fields) {\n\t\t\tfor (var i in this.filter_fields) this.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t}\n\tget_value() {\n\t\treturn this.selected_doctype\n\t\t\t? this.selected_doctype + \".\" + this.selected_fieldname\n\t\t\t: null;\n\t}\n\tval(value) {\n\t\tif (value === undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t}\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t}\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif (!doctype) return;\n\n\t\t// old style\n\t\tif (doctype.indexOf(\".\") !== -1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function (i, v) {\n\t\t\tif (v.doctype === doctype && v.fieldname === fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function (d) {\n\t\t\tvar opts = { parent: me.doctype };\n\t\t\tif (d.fieldname == \"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals[\"DocType\"][me.doctype];\n\t\tif (doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"parent\",\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: \"Parent\",\n\t\t\t\t\tparent: me.doctype,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\t// blank\n\t\tif (this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: \"\",\n\t\t\t\tvalue: \"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function (i, df) {\n\t\t\tlet doctype =\n\t\t\t\tfrappe.get_meta(me.doctype).istable && me.parent_doctype\n\t\t\t\t\t? me.parent_doctype\n\t\t\t\t\t: me.doctype;\n\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\")) me.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function (i, table_df) {\n\t\t\tif (table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta\n\t\t\t\t\t\t.get_docfields(table_df.options)\n\t\t\t\t\t\t.find((df) => df.fieldtype === \"Link\");\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function (i, df) {\n\t\t\t\t\tlet doctype =\n\t\t\t\t\t\tfrappe.get_meta(me.doctype).istable && me.parent_doctype\n\t\t\t\t\t\t\t? me.parent_doctype\n\t\t\t\t\t\t\t: me.doctype;\n\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == \"docstatus\" && !frappe.model.is_submittable(me.doctype)) return;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif (me.doctype && df.parent == me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + \" (\" + __(df.parent) + \")\";\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif (\n\t\t\tfrappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])\n\t\t) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent,\n\t\t\t});\n\t\t\tif (!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t}\n};\n", "\n\tfrappe.templates['edit_filter'] = `<div class=\"filter-box\">\n\t<div class=\"visible-xs flex justify-flex-end\">\n\t\t<span class=\"remove-filter\">\n\t\t\t{{ __(\"Remove\") }}\n\t\t</span>\n\t</div>\n\t<div class=\"list_filter row\">\n\t\t<div class=\"fieldname-select-area col-sm-4 ui-front form-group\"></div>\n\t\t<div class=\"col-sm-3 form-group\">\n\t\t\t<select class=\"condition form-control input-xs\">\n\t\t\t\t{% for condition in conditions %}\n\t\t\t\t<option value=\"{{condition[0]}}\">{{ condition[1] }}</option>\n\t\t\t\t{% endfor %}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-sm-4 form-group\">\n\t\t\t<div class=\"filter-field\"></div>\n\t\t\t<div class=\"text-muted small filter-description\"></div>\n\t\t</div>\n\t\t<div class=\"remove-filter col-sm-1 text-center hidden-xs\">\n\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t<use href=\"#icon-close\" class=\"close\"></use>\n\t\t\t</svg>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({ parent, placeholder, tagsList, onTagAdd, onTagRemove, onTagClick, onChange }) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder =\n\t\t\t$(`<button class=\"add-tags-btn text-muted btn btn-link icon-btn\" id=\"add_tags\">\n\t\t\t\t${__(placeholder)}\n\t\t\t</button>`);\n\t\tthis.$placeholder.appendTo(this.$ul.find(\".form-sidebar-items\"));\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function () {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val(\"\");\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on(\"blur\", () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on(\"click\", () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label !== \"\" && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, \"form-tag-row\");\n\t\t\trow.insertAfter(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif (this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find(\".form-tag-row\").remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name = \"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest(\".form-tag-row\").remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on(\"click\", \".pill-label\", () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n};\n", "frappe.ui.TagEditor = class TagEditor {\n\tconstructor(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t}\n\tsetup_tags() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: '<svg class=\"es-icon icon-sm\"><use href=\"#es-line-add\"></use></svg>',\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif (me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif (!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t}\n\tsetup_awesomplete() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: [],\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function (e) {\n\t\t\t$input.attr(\"state\", \"open\");\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function (e) {\n\t\t\t$input.attr(\"state\", \"closed\");\n\t\t});\n\t\t$input.on(\"input\", function (e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function (e) {\n\t\t\tif ($input.attr(\"state\") != \"open\") {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t}\n\tget_args(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t};\n\t}\n\trefresh(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif (user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(\",\"));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout(function () {\n\t\t\t\tme.refresh();\n\t\t\t}, 100);\n\t\t}\n\t\tme.refreshing = false;\n\t}\n};\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function (doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user) === -1 ? false : true;\n};\n\nfrappe.ui.get_liked_by = function (doc) {\n\tvar liked = doc._liked_by;\n\tif (liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n};\n\nfrappe.ui.toggle_like = function ($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css(\"pointer-events\", \"none\");\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function (r) {\n\t\t\t// renable click\n\t\t\t$btn.css(\"pointer-events\", \"auto\");\n\n\t\t\tif (!r.exc) {\n\t\t\t\tfor (const like of document.querySelectorAll(\".like-action\")) {\n\t\t\t\t\tif (like.dataset.name === name && like.dataset.doctype === doctype) {\n\t\t\t\t\t\tlike.classList.toggle(\"not-liked\", add === \"No\");\n\t\t\t\t\t\tlike.classList.toggle(\"liked\", add === \"Yes\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif (doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif (add === \"Yes\") {\n\t\t\t\t\t\tif (idx === -1) liked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0, idx).concat(liked_by.slice(idx + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n};\n\nfrappe.ui.click_toggle_like = function () {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function () {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n};\n\nfrappe.ui.setup_like_popover = ($parent, selector) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on(\"mouseover\", selector, function () {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: \"bottom\",\n\t\t\ttrigger: \"manual\",\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr(\"data-liked-by\");\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : \"[]\";\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = \"/app/user-profile/\";\n\n\t\t\t\tliked_by.forEach((user) => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children(\"li\").click((ev) => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover(\"hide\");\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: \"body\",\n\t\t});\n\n\t\ttarget_element.popover(\"show\");\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover(\"hide\");\n\t\t});\n\n\t\ttarget_element.on(\"mouseout\", () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$(\".popover:hover\").length) {\n\t\t\t\t\ttarget_element.popover(\"hide\");\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n};\n", "\n\tfrappe.templates['print_template'] = `<!DOCTYPE html>\n<html lang=\"{{ lang }}\" dir=\"{{ layout_direction }}\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<meta name=\"description\" content=\"\">\n\t<meta name=\"author\" content=\"\">\n\t<title>{{ title }}</title>\n\t<link href=\"{{ base_url }}{{ frappe.assets.bundled_asset('print.bundle.css', frappe.utils.is_rtl(lang)) }}\" rel=\"stylesheet\">\n\t<style>\n\t\t{{ print_css }}\n\t</style>\n</head>\n<body>\n\t<div class=\"print-format-gutter\">\n\t\t{% if print_settings.repeat_header_footer %}\n\t\t\t<div id=\"footer-html\" class=\"visible-pdf\">\n\t\t\t\t{% if print_settings.letter_head && print_settings.letter_head.footer %}\n\t\t\t\t\t<div class=\"letter-head-footer\">\n\t\t\t\t\t\t{{ print_settings.letter_head.footer }}\n\t\t\t\t\t</div>\n\t\t\t\t{% endif %}\n\t\t\t\t<p class=\"text-center small page-number visible-pdf\">\n\t\t\t\t\t{{ __(\"Page {0} of {1}\", [\\`<span class=\"page\"></span>\\`, \\`<span class=\"topage\"></span>\\`]) }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t{% endif %}\n\n\t\t<div class=\"print-format {% if landscape %}landscape{% endif %}\"\n\t\t\t\t{% if columns.length > 20 %}\n\t\t\t\t\t{% if can_use_smaller_font %}\n\t\t\t\t\t\tstyle=\"font-size: 4.0pt\"\n\t\t\t\t\t{% endif %}\n\t\t\t\t{% endif %}\n\t\t\t>\n\t\t\t{% if print_settings.letter_head %}\n\t\t\t<div {% if print_settings.repeat_header_footer %} id=\"header-html\" class=\"hidden-pdf\" {% endif %}>\n\t\t\t\t<div class=\"letter-head\">{{ print_settings.letter_head.header }}</div>\n\t\t\t</div>\n\t\t\t{% endif %}\n\t\t\t{{ content }}\n\t\t</div>\n\t</div>\n</body>\n</html>\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\treturn frappe.run_serially([\n\t\t\t() => this.show_skeleton(),\n\t\t\t() => this.fetch_meta(),\n\t\t\t() => this.hide_skeleton(),\n\t\t\t() => this.check_permissions(),\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = frappe.is_large_screen() ? 100 : 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = this.meta.sort_field || \"modified\";\n\t\tthis.sort_order = this.meta.sort_order || \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\tasync setup_fields() {\n\t\tawait this.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tasync set_fields() {\n\t\tlet fields = [].concat(frappe.model.std_fields_list, this.meta.title_field);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\tdf.in_list_view &&\n\t\t\t\t\tfrappe.perm.has_perm(this.doctype, df.permlevel, \"read\")) ||\n\t\t\t\t(df.fieldtype === \"Currency\" && df.options && !df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent || doctype;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(this.doctype);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tfetch_meta() {\n\t\treturn frappe.model.with_doctype(this.doctype);\n\t}\n\n\tshow_skeleton() {}\n\n\thide_skeleton() {}\n\n\tcheck_permissions() {\n\t\treturn true;\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass(\"frappe-card\");\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass(\"no-list-sidebar\");\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\tImage: \"image-view\",\n\t\t\tList: \"list\",\n\t\t\tReport: \"small-file\",\n\t\t\tCalendar: \"calendar\",\n\t\t\tGantt: \"gantt\",\n\t\t\tKanban: \"kanban\",\n\t\t\tDashboard: \"dashboard\",\n\t\t\tMap: \"map\",\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher && !this.meta.force_re_route_to_default_view) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(\n\t\t\t\t__(\"{0} View\", [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || \"list\"\n\t\t\t);\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map,\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\n\t\t\t\t\"es-line-reload\",\n\t\t\t\t() => {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t},\n\t\t\t\t\"\",\n\t\t\t\t__(\"Reload List\")\n\t\t\t);\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items &&\n\t\t\tthis.menu_items.map((item) => {\n\t\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\t\titem.label,\n\t\t\t\t\titem.action,\n\t\t\t\t\titem.standard,\n\t\t\t\t\titem.shortcut\n\t\t\t\t);\n\t\t\t\tif (item.class) {\n\t\t\t\t\t$item && $item.addClass(item.class);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(this.page.main);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters).catch(() => {\n\t\t\t\tthis.filter_area.clear(false);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) => frappe.model.get_full_column_name(f[0], f[1]));\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find((f) => f[0] == \"name\");\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter((f) => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn (\n\t\t\t{\n\t\t\t\tlike: filter[3]?.replace(/^%?|%$/g, \"\"),\n\t\t\t\t\"not set\": null,\n\t\t\t}[filter[2]] || filter[3]\n\t\t);\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area ? this.filter_area.get().map((filter) => filter.slice(0, 4)) : [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by(),\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tlet args = this.get_call_args();\n\t\tif (this.no_change(args)) {\n\t\t\t// console.log('throttled');\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(args).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tno_change(args) {\n\t\t// returns true if arguments are same for the last 3 seconds\n\t\t// this helps in throttling if called from various sources\n\t\tif (this.last_args && JSON.stringify(args) === this.last_args) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.last_args = JSON.stringify(args);\n\t\tsetTimeout(() => {\n\t\t\tthis.last_args = null;\n\t\t}, 3000);\n\t\treturn false;\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\n\t\t// extract user_info for assignments\n\t\tObject.assign(frappe.boot.user_info, data.user_info);\n\t\tdelete data.user_info;\n\n\t\tdata = !Array.isArray(data) ? frappe.utils.dict(data.keys, data.values) : data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0)) return Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => !this.exists(f));\n\n\t\t// standard filters = filters visible on list view\n\t\t// non-standard filters = filters set by filter button\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(filters);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\treturn filters.reduce((out, filter) => {\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\t// set in list view area if filters are present\n\t\t\t// don't set like filter on link fields (gets reset)\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" ||\n\t\t\t\t\t(condition === \"like\" && fields_dict[fieldname]?.df?.fieldtype != \"Link\") ||\n\t\t\t\t\t(condition === \"descendants of (inclusive)\" &&\n\t\t\t\t\t\tfields_dict[fieldname]?.df?.fieldtype == \"Link\"))\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() => fields_dict[fieldname].set_value(value));\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map((f) => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find(\n\t\t\t\".standard-filter-section\"\n\t\t);\n\t\tlet fields = [];\n\n\t\tif (!this.list_view.settings.hide_name_filter) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"ID\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t});\n\t\t}\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter && frappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Phone\",\n\t\t\t\t\t\t\t\"JSON\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t\tdf.options &&\n\t\t\t\t\t\tfrappe.boot.treeviews.includes(df.options)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcondition = \"descendants of (inclusive)\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map((df) => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tfield.df.doctype || this.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<div class=\"btn-group\">\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"es-line-filter\")}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t\t<span>\n\t\t\t\t</button>\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-x-button\" title=\"${__(\"Clear all filters\")}\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"es-small-close\")}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>`).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find(\".filter-button\");\n\t\tthis.filter_x_button = this.$filter_list_wrapper.find(\".filter-x-button\");\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tfilter_x_button: this.filter_x_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) => frappe.views.view_modes.includes(view_mode);\n", "export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__(\"Doctype required\"));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint(docs) {\n\t\tconst print_settings = frappe.model.get_doc(\":Print Settings\", \"Print Settings\");\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\t\tconst letterheads = this.get_letterhead_options();\n\n\t\tconst valid_docs = docs\n\t\t\t.filter((doc) => {\n\t\t\t\treturn (\n\t\t\t\t\t!is_submittable ||\n\t\t\t\t\tdoc.docstatus === 1 ||\n\t\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\t\tfrappe.user.has_role(\"Administrator\")\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((doc) => doc.name);\n\n\t\tconst invalid_docs = docs.filter((doc) => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__(\"You selected Draft or Cancelled documents\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__(\"Select atleast 1 record for printing\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Print Documents\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Letter Head\"),\n\t\t\t\t\tfieldname: \"letter_sel\",\n\t\t\t\t\toptions: letterheads,\n\t\t\t\t\tdefault: letterheads[0],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Print Format\"),\n\t\t\t\t\tfieldname: \"print_sel\",\n\t\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype),\n\t\t\t\t\tdefault: frappe.get_meta(this.doctype).default_print_format,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Page Size\"),\n\t\t\t\t\tfieldname: \"page_size\",\n\t\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\t\tdefault: print_settings.pdf_page_size,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Height (in mm)\"),\n\t\t\t\t\tfieldname: \"page_height\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_height,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Width (in mm)\"),\n\t\t\t\t\tfieldname: \"page_width\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_width,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tdialog.set_primary_action(__(\"Print\"), (args) => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__(\"Page height and width cannot be zero\"));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({\n\t\t\t\t\t\"page-height\": args.page_height,\n\t\t\t\t\t\"page-width\": args.page_width,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t\"/api/method/frappe.utils.print_format.download_multi_pdf?\" +\n\t\t\t\t\t\"doctype=\" +\n\t\t\t\t\tencodeURIComponent(this.doctype) +\n\t\t\t\t\t\"&name=\" +\n\t\t\t\t\tencodeURIComponent(json_string) +\n\t\t\t\t\t\"&format=\" +\n\t\t\t\t\tencodeURIComponent(print_format) +\n\t\t\t\t\t\"&no_letterhead=\" +\n\t\t\t\t\t(with_letterhead ? \"0\" : \"1\") +\n\t\t\t\t\t\"&letterhead=\" +\n\t\t\t\t\tencodeURIComponent(letterhead) +\n\t\t\t\t\t\"&options=\" +\n\t\t\t\t\tencodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__(\"Please enable pop-ups\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options() {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Letter Head\",\n\t\t\t\tfields: [\"name\", \"is_default\"],\n\t\t\t\tfilters: { disabled: 0 },\n\t\t\t\tlimit_page_length: 0,\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach((letterhead) => {\n\t\t\t\t\t\tif (letterhead.is_default) {\n\t\t\t\t\t\t\tletterhead_options.unshift(letterhead.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete(docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.reportview.delete_items\",\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot delete {0}\", [failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(\"delete\");\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add_multiple\",\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done,\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__(\"Select records for assignment\"));\n\t\t}\n\t}\n\n\tapply_assignment_rule(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe\n\t\t\t\t.call(\"frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t})\n\t\t\t\t.then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel(docnames, action = \"submit\", done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot {0} {1}\", [action, failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit(docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort(function (a, b) {\n\t\t\treturn __(cstr(field_mappings[a].label)).localeCompare(\n\t\t\t\tcstr(__(field_mappings[b].label))\n\t\t\t);\n\t\t});\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find((value) => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Bulk Edit\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: field_options,\n\t\t\t\t\tdefault: default_field,\n\t\t\t\t\tlabel: __(\"Field\"),\n\t\t\t\t\tfieldname: \"field\",\n\t\t\t\t\treqd: 1,\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: __(\"Value\"),\n\t\t\t\t\tfieldname: \"value\",\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value(\"field\")].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe\n\t\t\t\t\t.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\t\taction: \"update\",\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t[fieldname]: value || null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t__(\"Cannot update {0}\", [\n\t\t\t\t\t\t\t\t\tfailed.map((f) => (f.bold ? f.bold() : f)).join(\", \"),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\tfrappe.show_alert(__(\"Updated successfully\"));\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __(\"Update {0} records\", [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field(dialogObj) {\n\t\t\tconst new_df = Object.assign({}, field_mappings[dialogObj.get_value(\"field\")]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (\n\t\t\t\tnew_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === \"Select\" &&\n\t\t\t\t!new_df.default\n\t\t\t) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __(\"Value\");\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field(\"value\", new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value(\"value\");\n\t\t\tif (value == null || value === \"\") {\n\t\t\t\tdialog.set_df_property(\n\t\t\t\t\t\"value\",\n\t\t\t\t\t\"description\",\n\t\t\t\t\t__(\"You have not entered a value. The field will be set to empty.\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property(\"value\", \"description\", \"\");\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\tadd_tags(docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add Tags\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\t\tfieldname: \"tags\",\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\ttags: args.tags,\n\t\t\t\t\t\t\tdt: this.doctype,\n\t\t\t\t\t\t\tdocs: docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\texport(doctype, docnames) {\n\t\tfrappe.require(\"data_import_tools.bundle.js\", () => {\n\t\t\tconst data_exporter = new frappe.data_import.DataExporter(\n\t\t\t\tdoctype,\n\t\t\t\t\"Insert New Records\"\n\t\t\t);\n\t\t\tdata_exporter.dialog.set_value(\"export_records\", \"by_filter\");\n\t\t\tdata_exporter.filter_group.add_filters_to_filter_group([\n\t\t\t\t[doctype, \"name\", \"in\", docnames, false],\n\t\t\t]);\n\t\t});\n\t}\n}\n", "export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(\"DocType required\");\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields =\n\t\t\tthis.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields,\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || [],\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 10;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = idx == 0 ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = idx == 0 ? `hide` : ``;\n\t\t\tlet can_remove = idx == 0 || is_status_field(me.fields[idx]) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tme.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map((f) => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(\n\t\t\tme.get_removed_listview_fields(\n\t\t\t\tme.fields.map((f) => f.fieldname),\n\t\t\t\texisting_fields\n\t\t\t)\n\t\t);\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\"),\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(\n\t\t\t\t\t\tme.meta,\n\t\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t\t),\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\td.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(\n\t\t\t\tme.get_removed_listview_fields(\n\t\t\t\t\tvalues,\n\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe\n\t\t\t.xcall(\n\t\t\t\t\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\",\n\t\t\t\t{\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((fields) => {\n\t\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\t\tdialog.refresh();\n\t\t\t});\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy((f) => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (\n\t\t\t\tfield.in_list_view &&\n\t\t\t\t!frappe.model.no_value_type.includes(field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname\n\t\t\t) {\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"ID\",\n\t\t\tfieldname: \"name\",\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname,\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\",\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (!frappe.model.no_value_type.includes(field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: fields.includes(field.fieldname),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach((column) => {\n\t\t\tif (!new_fields.includes(column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields = me.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n", "import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t\tthis.debounced_refresh = frappe.utils.debounce(\n\t\t\tthis.process_document_refreshes.bind(this),\n\t\t\t2000\n\t\t);\n\t}\n\n\thas_permissions() {\n\t\treturn frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\t\tsuper.show();\n\t}\n\n\tcheck_permissions() {\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route(\"\");\n\t\t\tfrappe.throw(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t}\n\t}\n\n\tshow_skeleton() {\n\t\tthis.$list_skeleton = this.parent.page.container.find(\".list-skeleton\");\n\t\tif (!this.$list_skeleton.length) {\n\t\t\tthis.$list_skeleton = $(`\n\t\t\t\t<div class=\"row list-skeleton\">\n\t\t\t\t\t<div class=\"col-lg-2\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\tthis.parent.page.container.find(\".page-content\").append(this.$list_skeleton);\n\t\t}\n\t\tthis.parent.page.container.find(\".layout-main\").hide();\n\t\tthis.$list_skeleton.show();\n\t}\n\n\thide_skeleton() {\n\t\tthis.$list_skeleton && this.$list_skeleton.hide();\n\t\tthis.parent.page.container.find(\".layout-main\").show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || this.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || this.sort_order || \"desc\";\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\t// set filters from view_user_settings or list_settings\n\t\tif (Array.isArray(this.view_user_settings.filters)) {\n\t\t\t// Priority 1: view_user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == \"List\") this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map((df) => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters.filter((f) => valid_fields.includes(f[1])).uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(this.workflow_action_menu_items);\n\t\tactions.forEach((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(item.label, item.action, item.standard);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon(\"restriction\", \"xs\")}\n\t\t\t\t</button>`\n\t\t\t)\n\t\t\t\t.click(() => this.show_restrictions(match_rules_list))\n\t\t\t\t.appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tget_fields() {\n\t\treturn super\n\t\t\t.get_fields()\n\t\t\t.concat(\n\t\t\t\tObject.entries(this.link_field_title_fields || {}).map(\n\t\t\t\t\t(entry) => entry.join(\".\") + \" as \" + entry.join(\"_\")\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tasync set_fields() {\n\t\tthis.link_field_title_fields = {};\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tawait Promise.all(\n\t\t\tfields.map((f) => {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tconst df =\n\t\t\t\t\t\ttypeof f === \"string\" ? frappe.meta.get_docfield(this.doctype, f) : f;\n\t\t\t\t\tif (\n\t\t\t\t\t\tdf &&\n\t\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t\tfrappe.boot.link_title_doctypes.includes(df.options)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfrappe.model.with_doctype(df.options, () => {\n\t\t\t\t\t\t\tconst meta = frappe.get_meta(df.options);\n\t\t\t\t\t\t\tif (meta.show_title_field_in_link) {\n\t\t\t\t\t\t\t\tthis.link_field_title_fields[\n\t\t\t\t\t\t\t\t\ttypeof f === \"string\" ? f : f.fieldname\n\t\t\t\t\t\t\t\t] = meta.title_field;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (df && df.fieldtype === \"Currency\" && df.options && !df.options.includes(\":\")) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create && !frappe.boot.read_only) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header = false) {\n\t\treturn super.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t\tthis.update_url_with_filters();\n\t\t\tthis.setup_realtime_updates();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\",\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (frappe.has_indicator(this.doctype) && df.fieldname === \"status\") {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 10;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== \"name\"\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${this.meta.documentation}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\n\t\tlet has_filters_set = filters && filters.length;\n\t\tlet no_result_message = has_filters_set\n\t\t\t? __(\"No {0} found with matching filters. Clear filters to see all {0}.\", [\n\t\t\t\t\t__(this.doctype),\n\t\t\t  ])\n\t\t\t: this.meta.description\n\t\t\t? __(this.meta.description)\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\n\t\tlet new_button_label = has_filters_set\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\n\t\t\t\t\t\"Create your first {0}\",\n\t\t\t\t\t[__(this.doctype)],\n\t\t\t\t\t\"Create a new document from list view\"\n\t\t\t  );\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-default btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_comment_count) {\n\t\t\targs.with_comment_count = 1;\n\t\t} else {\n\t\t\targs.with_comment_count = 0;\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(this.$result.find(\".list-row-check:checked\").length > 0);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header = false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find(\".list-row-head\").remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(this.doctype, \"last_view\", this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item\" data-sort-by=\"${subject_field.fieldname}\"\n\t\t\t\ttitle=\"${__(\"Click to sort by {0}\", [subject_field.label])}\">\n\t\t\t\t${__(subject_field.label)}\n\t\t\t</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map((col) => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\" : \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\tlet html = \"\";\n\t\t\t\tif (col.type === \"Subject\") {\n\t\t\t\t\thtml = subject_html;\n\t\t\t\t} else {\n\t\t\t\t\tconst fieldname = col.df?.fieldname;\n\t\t\t\t\tconst attrs = fieldname\n\t\t\t\t\t\t? ` data-sort-by=\"${fieldname}\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Click to sort by {0}\", [col.df?.label])}\"`\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\thtml = `<span ${attrs}>\n\t\t\t\t\t\t${__(col.df?.label || col.type)}\n\t\t\t\t\t</span>`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"${classes}\">${html}</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tconst right_html = `\n\t\t\t<span class=\"list-count\"></span>\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Liked by me\")}\">\n\t\t\t\t\t${frappe.utils.icon(\"es-solid-heart\", \"sm\", \"like-icon\")}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton($columns, right_html);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns.map((col) => this.get_column_html(col, doc)).join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(this.get_left_html(doc), this.get_right_html(doc));\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\" || col.df?.options == \"Workflow State\") {\n\t\t\tlet show_workflow_state = col.df?.options == \"Workflow State\";\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc, show_workflow_state)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? \"hide\" : \"\";\n\t\t\tlet tags_html = doc._user_tags\n\t\t\t\t? this.get_tags_html(doc._user_tags, 2)\n\t\t\t\t: '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst link_title_fieldname = this.link_field_title_fields[fieldname];\n\t\tconst value = doc[fieldname] || \"\";\n\t\tlet value_display = link_title_fieldname\n\t\t\t? doc[fieldname + \"_\" + link_title_fieldname] || value\n\t\t\t: value;\n\n\t\tlet translated_doctypes = frappe.boot?.translated_doctypes || [];\n\t\tif (translated_doctypes.includes(df.options)) {\n\t\t\tvalue_display = __(value_display);\n\t\t}\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from && [\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value_display);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value_display === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value_display)\n\t\t\t\t\t\t: value_display;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Rating\") {\n\t\t\t\tlet out_of_ratings = df.options || 5;\n\t\t\t\t_value = _value * out_of_ratings;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options\n\t\t\t\t\t? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon(\"restriction\")}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tlet column_html;\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname] &&\n\t\t\tcol.type !== \"Subject\"\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t} else {\n\t\t\tcolumn_html = {\n\t\t\t\tSubject: this.get_subject_html(doc),\n\t\t\t\tField: field_html(),\n\t\t\t}[col.type];\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored = false) {\n\t\tlet get_tag_html = (tag) => {\n\t\t\tlet color = \"\",\n\t\t\t\tstyle = \"\";\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags\n\t\t\t.split(\",\")\n\t\t\t.slice(1, limit + 1)\n\t\t\t.map(get_tag_html)\n\t\t\t.join(\"\");\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = ``;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments d-flex align-items-center\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tlet comment_count = null;\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_comment_count) {\n\t\t\tcomment_count = $(`<span class=\"comment-count d-flex align-items-center\"></span>`);\n\t\t\t$(comment_count).append(`\n\t\t\t\t${frappe.utils.icon(\"es-line-chat-alt\")}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count || 0}`);\n\t\t}\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t<span class=\"modified\">${modified}</span>\n\t\t\t\t${comment_count ? $(comment_count).prop(\"outerHTML\") : \"\"}\n\t\t\t\t${comment_count ? '<span class=\"mx-2\">\u00B7</span>' : \"\"}\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db\n\t\t\t.count(this.doctype, {\n\t\t\t\tfilters: this.get_filters_for_args(),\n\t\t\t})\n\t\t\t.then((total_count) => {\n\t\t\t\tthis.total_count = total_count || current_count;\n\t\t\t\tthis.count_without_children =\n\t\t\t\t\tcount_without_children !== current_count ? count_without_children : undefined;\n\t\t\t\tlet str = __(\"{0} of {1}\", [current_count, this.total_count]);\n\t\t\t\tif (this.count_without_children) {\n\t\t\t\t\tstr = __(\"{0} of {1} ({2} rows with children)\", [\n\t\t\t\t\t\tcount_without_children,\n\t\t\t\t\t\tthis.total_count,\n\t\t\t\t\t\tcurrent_count,\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\treturn `/app/${encodeURIComponent(\n\t\t\tfrappe.router.slug(frappe.router.doctype_layout || this.doctype)\n\t\t)}/${encodeURIComponent(cstr(doc.name))}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || \"[]\").includes(frappe.session.user) ? \"\" : \"bold\";\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tconst heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\t\tconst title = liked_by.map((u) => frappe.user_info(u).fullname).join(\", \");\n\n\t\tconst div = document.createElement(\"div\");\n\t\tdiv.innerHTML = `\n\t\t\t<span class=\"like-action ${heart_class}\">\n\t\t\t\t${frappe.utils.icon(\"es-solid-heart\", \"sm\", \"like-icon\")}\n\t\t\t</span>\n\t\t\t<span class=\"likes-count\">\n\t\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t\t</span>\n\t\t`;\n\n\t\tconst like = div.querySelector(\".like-action\");\n\t\tlike.setAttribute(\"data-liked-by\", doc._liked_by || \"[]\");\n\t\tlike.setAttribute(\"data-doctype\", this.doctype);\n\t\tlike.setAttribute(\"data-name\", doc.name);\n\t\tlike.setAttribute(\"title\", title);\n\n\t\treturn div.innerHTML;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tconst div = document.createElement(\"div\");\n\t\tdiv.innerHTML = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\">\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\">\n\t\t\t\t<a class=\"ellipsis\"></a>\n\t\t\t</span>\n\t\t`;\n\n\t\tconst checkbox = div.querySelector(\".list-row-checkbox\");\n\t\tcheckbox.dataset.doctype = this.doctype;\n\t\tcheckbox.dataset.name = doc.name;\n\n\t\tconst link = div.querySelector(\".level-item a\");\n\t\tlink.dataset.doctype = this.doctype;\n\t\tlink.dataset.name = doc.name;\n\t\tlink.href = this.get_form_link(doc);\n\t\t// \"Text Editor\" and some other fieldtypes can have html tags in them so strip and show text.\n\t\t// If no text is found show \"No Text Found in {Field Label}\"\n\t\tlet textValue = frappe.utils.html2text(value);\n\t\tlink.title = textValue;\n\t\tlink.textContent = textValue;\n\n\t\treturn div.innerHTML;\n\t}\n\n\tget_indicator_html(doc, show_workflow_state) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype, show_workflow_state);\n\t\t// sequence is important\n\t\tconst docstatus_description = [\n\t\t\t__(\"Document is in draft state\"),\n\t\t\t__(\"Document has been submitted\"),\n\t\t\t__(\"Document has been cancelled\"),\n\t\t];\n\t\tconst title = docstatus_description[doc.docstatus || 0];\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${\n\t\t\t\tindicator[1]\n\t\t\t} filterable no-indicator-dot ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}' title='${title}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t</span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(indicator[0])}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_sort_by();\n\t\tthis.setup_list_click();\n\t\tthis.setup_drag_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement).next().focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement).prev().focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_sort_by() {\n\t\tthis.$result.on(\"click\", \"[data-sort-by]\", (e) => {\n\t\t\tconst sort_by = e.currentTarget.getAttribute(\"data-sort-by\");\n\t\t\tif (!sort_by) return;\n\t\t\tlet sort_order = \"asc\"; // always start with asc\n\t\t\tif (this.sort_by === sort_by) {\n\t\t\t\t// unless it's the same field, then toggle\n\t\t\t\tsort_order = this.sort_order === \"asc\" ? \"desc\" : \"asc\";\n\t\t\t}\n\t\t\tthis.sort_selector.set_value(sort_by, sort_order);\n\t\t\tthis.on_sort_change(sort_by, sort_order);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif ((e.ctrlKey || e.metaKey) && !$target.is(\"a\")) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_drag_click() {\n\t\t/*\n\t\t\tClick on the check box in the list view and\n\t\t\tdrag through the rows to select.\n\n\t\t\tDo it again to unselect.\n\n\t\t\tIf the first click is on checked checkbox, then it will unselect rows on drag,\n\t\t\telse if it is unchecked checkbox, it will select rows on drag.\n\t\t*/\n\t\tthis.dragClick = false;\n\t\tthis.$result.on(\"mousedown\", \".list-row-checkbox\", (e) => {\n\t\t\tthis.dragClick = true;\n\t\t\tthis.check = !e.target.checked;\n\t\t});\n\t\t$(document).on(\"mouseup\", () => {\n\t\t\tthis.dragClick = false;\n\t\t});\n\t\tthis.$result.on(\"mousemove\", \".level.list-row\", (e) => {\n\t\t\tif (this.dragClick) {\n\t\t\t\tthis.check_row_on_drag(e, this.check);\n\t\t\t}\n\t\t});\n\t}\n\n\tcheck_row_on_drag(event, check = true) {\n\t\t$(event.target).find(\".list-row-checkbox\").prop(\"checked\", check);\n\t\tthis.on_row_checked();\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".checkbox-actions .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".list-header-subject .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result.find(\".list-row-checkbox\").prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr(\"data-parent\")) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr(\"data-parent\")}`)\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (e.shiftKey && this.$checkbox_cursor && !$target.is(this.$checkbox_cursor)) {\n\t\t\t\tconst name_1 = decodeURIComponent(this.$checkbox_cursor.data().name);\n\t\t\t\tconst name_2 = decodeURIComponent($target.data().name);\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data.slice(min_index + 1, max_index).map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${encodeURIComponent(name)}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\n\t\tlet me = this;\n\t\tthis.page.actions_btn_group.on(\"show.bs.dropdown\", () => {\n\t\t\tme.toggle_workflow_actions();\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar &&\n\t\t\tthis.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\t\tthis.toggle_tags();\n\t\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tthis.pending_document_refreshes = [];\n\n\t\tif (this.list_view_settings?.disable_auto_refresh || this.realtime_events_setup) {\n\t\t\treturn;\n\t\t}\n\t\tfrappe.realtime.doctype_subscribe(this.doctype);\n\t\tfrappe.realtime.off(\"list_update\");\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (data?.doctype !== this.doctype) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if some bulk operation is happening by selecting list items, don't refresh\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.avoid_realtime_update()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.pending_document_refreshes.push(data);\n\t\t\tthis.debounced_refresh();\n\t\t});\n\t\tthis.realtime_events_setup = true;\n\t}\n\n\tdisable_realtime_updates() {\n\t\tfrappe.realtime.doctype_unsubscribe(this.doctype);\n\t\tthis.realtime_events_setup = false;\n\t}\n\n\tprocess_document_refreshes() {\n\t\tif (!this.pending_document_refreshes.length) return;\n\n\t\tconst route = frappe.get_route() || [];\n\t\tif (!cur_list || route[0] != \"List\" || cur_list.doctype != route[1]) {\n\t\t\t// wait till user is back on list view before refreshing\n\t\t\tthis.pending_document_refreshes = [];\n\t\t\tthis.disable_realtime_updates();\n\t\t\treturn;\n\t\t}\n\n\t\tconst names = this.pending_document_refreshes.map((d) => d.name);\n\t\tthis.pending_document_refreshes = this.pending_document_refreshes.filter(\n\t\t\t(d) => names.indexOf(d.name) === -1\n\t\t);\n\n\t\tif (!names.length) return;\n\n\t\t// filters to get only the doc with this name\n\t\tconst call_args = this.get_call_args();\n\t\tcall_args.args.filters.push([this.doctype, \"name\", \"in\", names]);\n\t\tcall_args.args.start = 0;\n\n\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\tif (!message) return;\n\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\n\t\t\tif (!(data && data.length)) {\n\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t// in the listview according to filters applied\n\t\t\t\t// let's remove it manually\n\t\t\t\tthis.data = this.data.filter((d) => names.indexOf(d.name) === -1);\n\t\t\t\tthis.render_list();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tconst index = this.data.findIndex((doc) => doc.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\tlet return_value = 0;\n\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\treturn_value = 1;\n\t\t\t\t}\n\n\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\treturn_value = -1;\n\t\t\t\t}\n\n\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t}\n\t\t\t\treturn return_value;\n\t\t\t});\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\tthis.set_rows_as_checked();\n\t\t\t}\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render_list();\n\t\t});\n\t}\n\n\tavoid_realtime_update() {\n\t\tif (this.filter_area.is_being_edited()) {\n\t\t\treturn true;\n\t\t}\n\t\t// this is set when a bulk operation is called from a list view which might update the list view\n\t\t// this is to avoid the list view from refreshing a lot of times\n\t\t// the list view is updated once after the bulk operation is complete\n\t\tif (this.disable_list_update) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result.find(`.list-row-checkbox[data-name='${docname}']`).prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject || this.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions || this.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject.find(\".list-check-all\").prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find(\".tag-col\").toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tclear_checked_items() {\n\t\tthis.$checks && this.$checks.prop(\"checked\", false);\n\t\tthis.on_row_checked();\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(this.doctype, this.view_name, obj);\n\t}\n\n\ton_update() {}\n\n\tupdate_url_with_filters() {\n\t\tif (frappe.get_route_str() == this.page_name && !this.report_name) {\n\t\t\t// only update URL if the route still matches current page.\n\t\t\t// do not update if current list is a \"saved report\".\n\t\t\twindow.history.replaceState(null, null, this.get_url_with_filters());\n\t\t}\n\t}\n\n\tget_url_with_filters() {\n\t\tlet search_params = this.get_search_params();\n\n\t\tlet full_url = window.location.href.replace(window.location.search, \"\");\n\t\tif (search_params.size) {\n\t\t\tfull_url += \"?\" + search_params.toString();\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tget_search_params() {\n\t\tlet search_params = new URLSearchParams();\n\n\t\tthis.get_filters_for_args().forEach((filter) => {\n\t\t\tif (filter[2] === \"=\") {\n\t\t\t\tsearch_params.append(filter[1], filter[3]);\n\t\t\t} else {\n\t\t\t\tsearch_params.append(filter[1], JSON.stringify([filter[2], filter[3]]));\n\t\t\t}\n\t\t});\n\t\treturn search_params;\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype, null, this.meta)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tfrappe.model.can_create(\"Custom Field\") &&\n\t\t\tfrappe.model.can_create(\"Property Setter\")\n\t\t) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\tif (frappe.user.has_role(\"System Manager\") && frappe.boot.developer_mode === 1) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype),\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tconst me = this;\n\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(this.doctype);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tme.disable_list_update = true;\n\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t.xcall(\"frappe.model.workflow.bulk_workflow_approval\", {\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tme.disable_list_update = false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\n\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\tthis.workflow_action_items[key].addClass(\"disabled\");\n\t\t});\n\t\tconst checked_items = this.get_checked_items();\n\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].removeClass(\"disabled\");\n\t\t\t\t\tthis.workflow_action_items[key].toggle(actions.includes(key));\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only &&\n\t\t\t\t!field_doc.is_virtual\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.assign(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.apply_assignment_rule(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.add_tags(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map((docname) =>\n\t\t\t\t\t\tdocname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tlet message = __(\n\t\t\t\t\t\t\"Delete {0} item permanently?\",\n\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t);\n\t\t\t\t\tif (docnames.length > 1) {\n\t\t\t\t\t\tmessage = __(\n\t\t\t\t\t\t\t\"Delete {0} items permanently?\",\n\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.confirm(message, () => {\n\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\tbulk_operations.delete(docnames, () => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Cancel {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"cancel\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Submit {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"submit\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign({}, field_doc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.edit(this.get_checked_items(true), field_mappings, () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_export = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Export\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.export(doctype, docnames);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\tactions_menu_items.push(bulk_export());\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (frappe.model.can_cancel(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif ($.isArray(value) && value[0].startsWith(\"[\") && value[0].endsWith(\"]\")) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (typeof value === \"string\" && value.startsWith(\"[\") && value.endsWith(\"]\")) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(this.doctype, field);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([doctype, field, value_array[j][0], value_array[j][1]]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n};\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.list_view\");\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tconst me = this;\n\t\tconst doctype = route[1];\n\n\t\t// List / Gantt / Kanban / etc\n\t\tlet view_name = frappe.utils.to_title_case(route[2] || \"List\");\n\n\t\t// File is a special view\n\t\tif (doctype == \"File\" && ![\"Report\", \"Dashboard\"].includes(view_name)) {\n\t\t\tview_name = \"File\";\n\t\t}\n\n\t\tlet view_class = frappe.views[view_name + \"View\"];\n\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t// view can have custom routing logic\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.provide(\"frappe.views.list_view.\" + doctype);\n\n\t\tfrappe.views.list_view[me.page_name] = new view_class({\n\t\t\tdoctype: doctype,\n\t\t\tparent: me.make_page(true, me.page_name),\n\t\t});\n\n\t\tme.set_cur_list();\n\t}\n\n\tbefore_show() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.set_module_breadcrumb();\n\t}\n\n\ton_show() {\n\t\tthis.set_cur_list();\n\t\tif (cur_list) cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tconst doctype = this.route[1];\n\t\tconst last_route = frappe.route_history.slice(-2)[0];\n\t\tif (\n\t\t\tthis.route[0] === \"List\" &&\n\t\t\tthis.route.length === 2 &&\n\t\t\tfrappe.views.list_view[doctype] &&\n\t\t\tlast_route &&\n\t\t\tlast_route[0] === \"List\" &&\n\t\t\tlast_route[1] === doctype\n\t\t) {\n\t\t\t// last route same as this route, so going back.\n\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t// example:\n\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\twindow.history.go(-1);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tconst prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === \"modules\") {\n\t\t\t\tconst doctype = this.route[1],\n\t\t\t\t\tmodule = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tcur_list = frappe.views.list_view[this.page_name];\n\t\tif (cur_list && cur_list.doctype !== this.route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tif (this.doctype == \"File\" && view == \"List\") {\n\t\t\tview = \"File\";\n\t\t}\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\n\t\tlet search_params = cur_list?.get_search_params();\n\t\tif (search_params) {\n\t\t\tfrappe.route_options = Object.fromEntries(search_params);\n\t\t}\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\"),\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\"),\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then((calendars) => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\"),\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition: this.doctype === \"Communication\" && frappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (has_common(frappe.user_roles, [\"System Manager\", \"Administrator\"])) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Inbox\", accounts, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\"),\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\"),\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) =>\n\t\t\t\t\t\tthis.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t\t\t),\n\t\t\t\taction: () => this.set_route(\"map\"),\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach((view) => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler && views[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(__(view));\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = __(\"Select {0}\", [__(view)]);\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map((item) => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${item.name}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper.find(\".sidebar-action a\").click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map((k) => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tlet perms = this.list_view.board_perms;\n\t\tlet can_create = perms ? perms.create : true;\n\t\tif (can_create) {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(frappe.get_route().slice(-1)[0] || \"\");\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = (reports) => {\n\t\t\treports.map((r) => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route = r.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: __(r.title || r.name),\n\t\t\t\t\t\t\troute: route,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tfunction fetch_kanban_board(doctype) {\n\t\t\tfrappe.db.get_value(\n\t\t\t\t\"Kanban Board\",\n\t\t\t\t{ reference_doctype: doctype },\n\t\t\t\t\"name\",\n\t\t\t\t(board) => {\n\t\t\t\t\tif (!$.isEmptyObject(board)) {\n\t\t\t\t\t\tfrappe.set_route(\"list\", doctype, \"kanban\", board.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(doctype);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"]?.last_kanban_board;\n\t\tif (!last_opened_kanban) {\n\t\t\tfetch_kanban_board(this.doctype);\n\t\t} else {\n\t\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then((exists) => {\n\t\t\t\tif (exists) {\n\t\t\t\t\tfrappe.set_route(\"list\", this.doctype, \"kanban\", last_opened_kanban);\n\t\t\t\t} else {\n\t\t\t\t\tfetch_kanban_board(this.doctype);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map((calendar) => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${calendar.name}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach((account) => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\" ? \"All Accounts\" : account.email_account;\n\t\t\tlet route = `/app/communication/view/inbox/${email_account}`;\n\t\t\tlet display_name = [\"All Accounts\", \"Sent Mail\", \"Spam\", \"Trash\"].includes(\n\t\t\t\taccount.email_id\n\t\t\t)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route,\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n", "frappe.provide(\"frappe.ui\");\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\"System Manager\", \"Administrator\"]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__(\"Show Saved\")}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find(\".input-area\");\n\t\tthis.$list_filters = this.wrapper.find(\".list-filters\");\n\t\tthis.$saved_filters = this.wrapper.find(\".saved-filters\").hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find(\".saved-filters-preview\");\n\t\tthis.saved_filters_hidden = true;\n\t\tthis.toggle_saved_filters(true);\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tplaceholder: __(\"Filter Name\"),\n\t\t\t\tinput_class: \"input-xs\",\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: __(\"Is Global\"),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length\n\t\t\t\t? this.$saved_filters_preview.show()\n\t\t\t\t: this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find(\".filter-pill\").remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description(\"\");\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon(\"close\")}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find(\".saved-filters-preview\").click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __(\"Hide Saved\") : __(\"Show Saved\");\n\t\tthis.wrapper.find(\".saved-filters-preview\").text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on(\"click\", \".filter-pill .filter-name\", (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent(\".filter-pill\");\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr(\"data-name\");\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on(\"click\", \".filter-pill .remove\", (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest(\".filter-pill\");\n\t\t\tconst filter_label = $li.text().trim();\n\n\t\t\tfrappe.confirm(\n\t\t\t\t__(\"Are you sure you want to remove the {0} filter?\", [filter_label.bold()]),\n\t\t\t\t() => {\n\t\t\t\t\tconst name = $li.attr(\"data-name\");\n\t\t\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t\t\t$li.remove();\n\t\t\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode[\"ENTER\"]) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value(\"\");\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __(\"Press Enter to save\");\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __(\"Duplicate Filter Name\");\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : \"\");\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: \"List Filter\",\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? \"\" : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc(\"List Filter\", name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || \"[]\");\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === \"Guest\") return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list(\"List Filter\", {\n\t\t\t\tfields: [\"name\", \"filter_name\", \"for_user\", \"filters\"],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t[\"for_user\", \"=\", frappe.session.user],\n\t\t\t\t\t[\"for_user\", \"=\", \"\"],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find(\".btn-primary-light\")\n\t\t\t.toggleClass(\"btn-primary-light btn-default\");\n\t\t$filter.toggleClass(\"btn-default btn-primary-light\");\n\t}\n}\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from \"./list_filter\";\nfrappe.provide(\"frappe.views\");\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger(\"list_sidebar_setup\");\n\n\t\tif (\n\t\t\tthis.list_view.list_view_settings &&\n\t\t\tthis.list_view.list_view_settings.disable_sidebar_stats\n\t\t) {\n\t\t\tthis.sidebar.find(\".list-tags\").remove();\n\t\t} else {\n\t\t\tthis.sidebar.find(\".list-stats\").on(\"show.bs.dropdown\", (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t\tthis.add_insights_banner();\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass(\"hide\");\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = \"List\";\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar\n\t\t\t.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr(\"disabled\", \"disabled\")\n\t\t\t.addClass(\"disabled\");\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar\n\t\t\t.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr(\"disabled\", null)\n\t\t\t.removeClass(\"disabled\");\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (\n\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass(\"hide\");\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find(\".reports-dropdown\");\n\t\tvar divider = false;\n\n\t\tvar add_reports = function (reports) {\n\t\t\t$.each(reports, function (name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `List/${r.ref_doctype}/Report`\n\t\t\t\t\t\t\t: \"query-report\";\n\n\t\t\t\t\tvar route = r.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t'<li><a href=\"#' + route + '\">' + __(r.title || r.name) + \"</a></li>\"\n\t\t\t\t\t\t).appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find(\".list-filters\"),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view,\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find(\".kanban-dropdown\");\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find(\".list-link > a, .list-link > .btn-group > a\").each((i, el) => {\n\t\t\tfrappe.ui.keys.get_shortcut_group(this.page).add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\n\t\tlet dropdown_options = me.sidebar.find(\".list-stats-dropdown .stat-result\");\n\t\tthis.set_loading_state(dropdown_options);\n\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.desk.reportview.get_sidebar_stats\",\n\t\t\ttype: \"GET\",\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters:\n\t\t\t\t\t(me.list_view.filter_area\n\t\t\t\t\t\t? me.list_view.get_filters_for_args()\n\t\t\t\t\t\t: me.default_filters) || [],\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find(\".list-stats-dropdown\");\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, \".stat-link\", \".stat-label\");\n\t\t\t},\n\t\t});\n\t}\n\n\tset_loading_state(dropdown) {\n\t\tdropdown.html(`<li>\n\t\t\t<div class=\"empty-state\">\n\t\t\t\t${__(\"Loading...\")}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\"),\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\n\t\t\t\"click\",\n\t\t\t\".stat-link\",\n\t\t\t(e) => {\n\t\t\t\tlet fieldname = $(e.currentTarget).attr(\"data-field\");\n\t\t\t\tlet label = $(e.currentTarget).attr(\"data-label\");\n\t\t\t\tlet condition = \"like\";\n\t\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\t\tif (existing) {\n\t\t\t\t\texisting.remove();\n\t\t\t\t}\n\t\t\t\tif (label == \"No Tags\") {\n\t\t\t\t\tlabel = \"%,%\";\n\t\t\t\t\tcondition = \"not like\";\n\t\t\t\t}\n\t\t\t\tthis.list_view.filter_area.add(this.doctype, fieldname, condition, label);\n\t\t\t}\n\t\t);\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n\n\tadd_insights_banner() {\n\t\ttry {\n\t\t\tif (this.list_view.view != \"Report\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (localStorage.getItem(\"show_insights_banner\") == \"false\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.insights_banner) {\n\t\t\t\tthis.insights_banner.remove();\n\t\t\t}\n\n\t\t\tconst message = \"Get more insights with\";\n\t\t\tconst link = \"https://frappe.io/s/insights\";\n\t\t\tconst cta = \"Frappe Insights\";\n\n\t\t\tthis.insights_banner = $(`\n\t\t\t\t<div style=\"position: relative;\">\n\t\t\t\t\t<div class=\"pr-3\">\n\t\t\t\t\t\t${message} <a href=\"${link}\" target=\"_blank\" style=\"color: var(--text-color)\">${cta} &rarr; </a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style=\"position: absolute; top: -1px; right: -4px; cursor: pointer;\" title=\"Dismiss\"\n\t\t\t\t\t\tonclick=\"localStorage.setItem('show_insights_banner', 'false') || this.parentElement.remove()\">\n\t\t\t\t\t\t<svg class=\"icon  icon-sm\" style=\"\">\n\t\t\t\t\t\t\t<use class=\"\" href=\"#icon-close\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`).appendTo(this.sidebar);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n};\n", "\n\tfrappe.templates['list_sidebar'] = `<ul class=\"list-unstyled sidebar-menu user-actions hide\">\n\t<li class=\"divider\"></li>\n</ul>\n<ul class=\"list-unstyled sidebar-menu\">\n\t<div class=\"sidebar-section views-section hide\">\n\t\t<li class=\"sidebar-label\">\n\t\t</li>\n\t\t<div class=\"current-view\">\n\t\t\t<li class=\"list-link\">\n\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"selected-view ellipsis\">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu views-dropdown\" role=\"menu\">\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"view-action\"></a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Filter By\") }}\n\t\t</li>\n\n\t\t<div class=\"list-group-by\">\n\t\t</div>\n\n\t\t<div class=\"list-tags\">\n\t\t\t<li class=\"list-stats list-link\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span>{{ __(\"Tags\") }}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu list-stats-dropdown\" role=\"menu\">\n\t\t\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t\t\t<input type=\"text\" placeholder={{__(\"Search\") }} data-element=\"search\" class=\"form-control input-xs\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"stat-result\">\n\t\t\t\t\t</div>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action show-tags\">\n\t\t\t\t<a class=\"list-tag-preview\">{{ __(\"Show Tags\") }}</a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section save-filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Save Filter\") }}\n\t\t</li>\n\t\t<li class=\"list-filters list-link\"></li>\n</ul>\n`;\n", "\n\tfrappe.templates['list_sidebar_stat'] = `\n{% if (!stats.length) { %}\n<li class=\"stat-no-records text-muted\">{{ __(\"No records tagged.\") }}</li>\n{% } else {\n\tfor (var i=0, l=stats.length; i < l; i++) {\n\t\tvar stat_label = stats[i][0];\n\t\tvar stat_count = stats[i][1];\n%}\n<li>\n\t<a class=\"stat-link dropdown-item\" data-label=\"{{ stat_label %}\" data-field=\"_user_tags\" href=\"#\" onclick=\"return false;\">\n\t\t<span class=\"stat-label\">{{ __(stat_label) }}</span>\n\t\t<span>{{ stat_count }}</span>\n\t</a>\n</li>\n\t{% }\n} %}\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = [\"assigned_to\", \"owner\"];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(this.user_settings.group_by_fields);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Select Filters\"),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t\"group_by_fields\",\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? [\"assigned_to\", \"owner\", ...group_by_fields]\n\t\t\t\t: [\"assigned_to\", \"owner\"];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__(\"Search\")}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find(\".add-list-group-by a\").on(\"click\", () => {\n\t\t\tfrappe.utils.setup_search(d.$body, \".unit-checkbox\", \".label-area\");\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find(\".list-group-by\");\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__(\"Edit Filters\")}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === \"assigned_to\") {\n\t\t\t\tlabel = __(\"Assigned To\");\n\t\t\t} else if (fieldname === \"owner\") {\n\t\t\t\tlabel = __(\"Created By\");\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon(\"select\", \"xs\")}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join(\"\");\n\t\tthis.$wrapper.find(\".list-group-by-fields\").html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find(\".group-by-field\").on(\"show.bs.dropdown\", (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find(\".group-by-dropdown\");\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find(\"a\").attr(\"data-fieldname\");\n\t\t\tlet fieldtype = $(e.currentTarget).find(\"a\").attr(\"data-fieldtype\");\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == \"assigned_to\" ? \"_assign\" : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__(\"Loading...\")}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__(\"No filters found\")}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search($dropdown, \".group-by-item\", \".group-by-value\", \"data-name\");\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t[\"Select\", \"Link\", \"Data\", \"Int\", \"Check\"].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: \"group_by_fields\",\n\t\t\tfieldtype: \"MultiCheck\",\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === \"assigned_to\" ? \"_assign\" : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe.call(\"frappe.desk.listview.get_group_by_count\", args).then((r) => {\n\t\t\tlet field_counts = r.message || [];\n\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\tlet current_user = field_counts.find((f) => f.name === frappe.session.user);\n\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t(f) => ![\"Guest\", \"Administrator\", frappe.session.user].includes(f.name)\n\t\t\t);\n\t\t\t// Set frappe.session.user on top of the list\n\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\treturn field_counts;\n\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__(\"Search\")}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html = \"\";\n\t\tlet dropdown_items_html = \"\";\n\n\t\tfields.map((field) => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass(\"has-selected\", Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied = false) {\n\t\tlet label;\n\t\tif (field.name == null) {\n\t\t\tlabel = __(\"Not Set\");\n\t\t} else if (field.name === frappe.session.user) {\n\t\t\tlabel = __(\"Me\");\n\t\t} else if (fieldtype && fieldtype == \"Check\") {\n\t\t\tlabel = field.name == \"0\" ? __(\"No\") : __(\"Yes\");\n\t\t} else {\n\t\t\tlabel = __(field.name);\n\t\t}\n\t\tlet value = field.name == null ? \"\" : encodeURIComponent(field.name);\n\t\tlet applied_html = applied\n\t\t\t? `<span class=\"applied\"> ${frappe.utils.icon(\"tick\", \"xs\")} </span>`\n\t\t\t: \"\";\n\t\treturn `<li class=\"group-by-item ${applied ? \"selected\" : \"\"}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on(\"click\", \".group-by-item\", (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass(\"selected\");\n\n\t\t\tlet fieldname = $target.parents(\".group-by-field\").find(\"a\").data(\"fieldname\");\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data(\"value\") === \"string\"\n\t\t\t\t\t? decodeURIComponent($target.data(\"value\").trim())\n\t\t\t\t\t: $target.data(\"value\");\n\t\t\tfieldname = fieldname === \"assigned_to\" ? \"_assign\" : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = \"=\";\n\t\tif (value === \"\") {\n\t\t\toperator = \"is\";\n\t\t\tvalue = \"not set\";\n\t\t}\n\t\tif (fieldname === \"_assign\") {\n\t\t\toperator = \"like\";\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(this.doctype, fieldname, operator, value);\n\t}\n};\n", "\n\tfrappe.templates['list_view_permission_restrictions'] = `<table class=\"table table-bordered\" style=\"margin: 0;\">\n\t<thead>\n\t\t<th>{{ __(\"Field\") }}</th>\n\t\t<th>{{ __(\"Value\") }}</th>\n\t</thead>\n\t<tbody>\n\t\t{% for (let condition of condition_list ) { %}\n\t\t\t{% for (let key in condition) { %}\n\t\t\t<tr>\n\t\t\t\t<td>{{ __(key) }}</td>\n\t\t\t\t<td>{{ frappe.utils.comma_or(condition[key]) }}</td>\n\t\t\t</tr>\n\t\t\t{% } %}\n\t\t{% } %}\n\t</tbody>\n</table>\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Gantt\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Gantt\");\n\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\tif (typeof this.calendar_settings.gantt == \"object\") {\n\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t}\n\n\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\tthis.sort_order = \"asc\";\n\t\t\t} else {\n\t\t\t\tthis.sort_by =\n\t\t\t\t\tthis.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || \"asc\";\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_view() {}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || \"name\"],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\",\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr[\"custom_class\"] = \"color-\" + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr[\"custom_class\"] = \"bar-milestone\";\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || \"Day\";\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = \"YYYY-MM-DD\";\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass(\"gantt-modern\");\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: (task) => {\n\t\t\t\tfrappe.set_route(\"Form\", task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format),\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = \"progress\";\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: (mode) => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode,\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: (task) => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html = `<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format(\"MMM D\")} - ${moment(task._end).format(\n\t\t\t\t\t\"MMM D\"\n\t\t\t\t)}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + \"</div>\";\n\t\t\t},\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find(\".gantt-view-mode\");\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = (view_mode) => (this.gantt.view_is(view_mode) ? \"btn-info\" : \"\");\n\t\tconst html = `<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(value) => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`\n\t\t\t\t\t)\n\t\t\t\t\t.join(\"\")}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find(\".level-left\").append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) =>\n\t\t\tsetTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on(\"click\", \".btn-view-mode\", (e) => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find(\".btn-view-mode\").removeClass(\"btn-info\");\n\t\t\t$btn.addClass(\"btn-info\");\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map((t) => t.custom_class)\n\t\t\t.filter((c) => c && c.startsWith(\"color-\"));\n\n\t\tlet style = classes\n\t\t\t.map((c) => {\n\t\t\t\tconst class_name = c.replace(\"#\", \"\");\n\t\t\t\tconst bar_color = \"#\" + c.substr(6);\n\t\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find((item) => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\",\n\t\t];\n\t}\n};\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)[\"Calendar\"] || {};\n\t\t\troute.push(user_settings.last_calendar || \"default\");\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn \"Calendar\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"{0} Calendar\", [this.page_title]);\n\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name,\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then((options) => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise((resolve) => {\n\t\t\tif (calendar_name === \"default\") {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc(\"Calendar View\", calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc(\"Calendar View\", calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [\n\t\t\t\t\t\t\t\tcalendar_name.bold(),\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t\"assets/frappe/js/lib/fullcalendar/fullcalendar.min.css\",\n\t\t\t\"assets/frappe/js/lib/fullcalendar/fullcalendar.min.js\",\n\t\t];\n\t\tlet user_language = frappe.boot.lang;\n\t\tif (user_language && user_language !== \"en\") {\n\t\t\tassets.push(\"assets/frappe/js/lib/fullcalendar/locale-all.js\");\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = class Calendar {\n\tconstructor(options) {\n\t\t$.extend(this, options);\n\t\tthis.field_map = this.field_map || {\n\t\t\tid: \"name\",\n\t\t\tstart: \"start\",\n\t\t\tend: \"end\",\n\t\t\tallDay: \"all_day\",\n\t\t\tconvertToUserTz: \"convert_to_user_tz\",\n\t\t};\n\t\tthis.color_map = {\n\t\t\tdanger: \"red\",\n\t\t\tsuccess: \"green\",\n\t\t\twarning: \"orange\",\n\t\t\tdefault: \"blue\",\n\t\t};\n\t\tthis.get_default_options();\n\t}\n\tget_default_options() {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem(\"cal_defaultView\");\n\t\t\tlet weekends = localStorage.getItem(\"cal_weekends\");\n\t\t\tlet defaults = {\n\t\t\t\tdefaultView: defaultView ? defaultView : \"month\",\n\t\t\t\tweekends: weekends ? weekends : true,\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then((defaults) => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function (i, doctype) {\n\t\t\tif (frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function () {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function () {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(\n\t\t\tthis.footnote_area,\n\t\t\tthis.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\")\n\t\t);\n\t\tthis.footnote_area.css({ \"border-top\": \"0px\" });\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t}\n\tsetup_view_mode_button(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find(\".btn-weekend\").detach();\n\t\tlet btnTitle = defaults.weekends ? __(\"Hide Weekends\") : __(\"Show Weekends\");\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t}\n\tset_localStorage_option(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t}\n\tbind() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function () {\n\t\t\tlet value = $(this).hasClass(\"fc-agendaWeek-button\")\n\t\t\t\t? \"agendaWeek\"\n\t\t\t\t: $(this).hasClass(\"fc-agendaDay-button\")\n\t\t\t\t? \"agendaDay\"\n\t\t\t\t: \"month\";\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function () {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar(\"option\", \"weekends\", me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t}\n\tset_css() {\n\t\t// flatify buttons\n\t\tthis.$wrapper\n\t\t\t.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button\")\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-prev-button span\")\n\t\t\t.attr(\"class\", \"\")\n\t\t\t.html(frappe.utils.icon(\"left\"));\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-next-button span\")\n\t\t\t.attr(\"class\", \"\")\n\t\t\t.html(frappe.utils.icon(\"right\"));\n\n\t\tthis.$wrapper.find(\".fc-today-button\").prepend(frappe.utils.icon(\"today\"));\n\n\t\tthis.$wrapper.find(\".fc-day-number\").wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function () {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t}\n\n\tget_system_datetime(date) {\n\t\tdate._offset = moment(date).tz(frappe.sys_defaults.time_zone)._offset;\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t}\n\tsetup_options(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = \"false\";\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.lang,\n\t\t\theader: {\n\t\t\t\tleft: \"prev, title, next\",\n\t\t\t\tright: \"today, month, agendaWeek, agendaDay\",\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tbuttonText: {\n\t\t\t\ttoday: __(\"Today\"),\n\t\t\t\tmonth: __(\"Month\"),\n\t\t\t\tweek: __(\"Week\"),\n\t\t\t\tday: __(\"Day\"),\n\t\t\t},\n\t\t\tevents: function (start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function (event, element) {\n\t\t\t\telement.attr(\"title\", event.tooltip);\n\t\t\t},\n\t\t\teventClick: function (event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif (frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function (event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function (event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function (startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name === \"month\" && endDate - startDate === 86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif (me.field_map.end) event[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif (me.field_map.allDay) {\n\t\t\t\t\tvar all_day = startDate._ambigTime && endDate._ambigTime ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(\n\t\t\t\t\t\t\tmoment(endDate).subtract(1, \"s\")\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function (date, jsEvent, view) {\n\t\t\t\tif (view.name === \"month\") {\n\t\t\t\t\tconst $date_cell = $(\"td[data-date=\" + date.format(\"YYYY-MM-DD\") + \"]\");\n\n\t\t\t\t\tif ($date_cell.hasClass(\"date-clicked\")) {\n\t\t\t\t\t\tme.$cal.fullCalendar(\"changeView\", \"agendaDay\");\n\t\t\t\t\t\tme.$cal.fullCalendar(\"gotoDate\", date);\n\t\t\t\t\t\tme.$wrapper.find(\".date-clicked\").removeClass(\"date-clicked\");\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find(\".fc-month-button\").removeClass(\"active\");\n\t\t\t\t\t\tme.$wrapper.find(\".fc-agendaDay-button\").addClass(\"active\");\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find(\".date-clicked\").removeClass(\"date-clicked\");\n\t\t\t\t\t$date_cell.addClass(\"date-clicked\");\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t};\n\n\t\tif (this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t}\n\tget_args(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map,\n\t\t};\n\t\treturn args;\n\t}\n\trefresh() {\n\t\tthis.$cal.fullCalendar(\"refetchEvents\");\n\t}\n\tprepare_events(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map((d) => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif (d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function (target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif (typeof d.allDay === \"undefined\") {\n\t\t\t\td.allDay = me.field_map.allDay;\n\t\t\t}\n\n\t\t\tif (!me.field_map.convertToUserTz) d.convertToUserTz = 1;\n\n\t\t\t// convert to user tz\n\t\t\tif (d.convertToUserTz) {\n\t\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\t\t\t}\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t}\n\tprepare_colors(d) {\n\t\tlet color, color_name;\n\t\tif (this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || \"blue\";\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ? color_name : \"blue\";\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, \"extra-light\");\n\t\t\td.textColor = frappe.ui.color.get(color_name, \"dark\");\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get(\"blue\", \"extra-light\");\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t}\n\tupdate_event(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\trevertFunc();\n\t\t\t},\n\t\t});\n\t}\n\tget_update_args(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id],\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif (this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = event.start._ambigTime && event.end._ambigTime ? 1 : 0;\n\n\t\tif (this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(\n\t\t\t\t\tmoment(event.end).subtract(1, \"s\")\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t}\n\n\tfix_end_date_for_event_render(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end\n\t\t\t\t? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime()\n\t\t\t\t: null;\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Dashboard\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"{0} Dashboard\", [__(this.doctype)]);\n\t\t\tthis.dashboard_settings =\n\t\t\t\tfrappe.get_user_settings(this.doctype)[\"dashboard_settings\"] || null;\n\t\t});\n\t}\n\n\trender() {}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__(\"Customize Dashboard\"), () => this.customize());\n\t\tthis.page.add_menu_item(__(\"Reset Dashboard Customizations\"), () =>\n\t\t\tthis.reset_dashboard_customization()\n\t\t);\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page\n\t\t\t.find(\".layout-main-section-wrapper\")\n\t\t\t.addClass(\"dashboard-page\");\n\t\tthis.page.main.removeClass(\"frappe-card\");\n\n\t\tthis.$dashboard_wrapper = this.$page.find(\".dashboard-view\");\n\t\tthis.$chart_header = this.$page.find(\".dashboard-header\");\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{ btn_class: \"btn-primary\" }\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(__(\"Discard\"), () => {\n\t\t\tthis.discard_dashboard_customization();\n\t\t\tthis.page.standard_actions.show();\n\t\t});\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() =>\n\t\t\t\t\tthis.fetch_dashboard_items(\n\t\t\t\t\t\t\"Dashboard Chart\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchart_type: [\"in\", [\"Count\", \"Sum\", \"Group By\"]],\n\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"charts\"\n\t\t\t\t\t),\n\t\t\t\t() =>\n\t\t\t\t\tthis.fetch_dashboard_items(\n\t\t\t\t\t\t\"Number Card\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"number_cards\"\n\t\t\t\t\t),\n\t\t\t\t() => this.render_dashboard(),\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then((settings) => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config\n\t\t\t\t? JSON.parse(settings.chart_config)\n\t\t\t\t: {};\n\t\t\tthis.charts.map((chart) => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db\n\t\t\t.get_list(doctype, {\n\t\t\t\tfilters: filters,\n\t\t\t\tfields: [\"*\"],\n\t\t\t})\n\t\t\t.then((items) => {\n\t\t\t\tthis[obj_name] = items;\n\t\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: { doctype: this.doctype },\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find(\".widget-group-head\").hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html = `<p>${__(\n\t\t\t\"You haven't added any Dashboard Charts or Number Cards yet.\"\n\t\t)}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button = `<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__(\"Customize\")}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = \"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find(\".empty-dashboard\");\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map((widget_name) => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"dashboard_settings\",\n\t\t\tthis.dashboard_settings\n\t\t);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings =\n\t\t\tfrappe.get_user_settings(this.doctype)[\"dashboard_settings\"] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings\n\t\t\t\t.save(this.doctype, \"dashboard_settings\", this.dashboard_settings)\n\t\t\t\t.then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"new_or_existing\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: \"Choose an existing chart or create a new chart\",\n\t\t\t\t\toptions: [\"New Chart\", \"Existing Chart\"],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart\",\n\t\t\t\t\tfieldname: \"chart\",\n\t\t\t\t\tfieldtype: \"Link\",\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tquery: \"frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user\",\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: \"Dashboard Chart\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Label\",\n\t\t\t\t\tfieldname: \"label\",\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_1\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Type\",\n\t\t\t\t\tfieldname: \"chart_type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Time Series\", \"Group By\"],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tlabel: \"Chart Config\",\n\t\t\t\t\tdepends_on:\n\t\t\t\t\t\t'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Function\",\n\t\t\t\t\tfieldname: \"chart_function\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Count\", \"Sum\", \"Average\"],\n\t\t\t\t\tdefault: \"Count\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Timespan\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"timespan\",\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: [\"Last Year\", \"Last Quarter\", \"Last Month\", \"Last Week\"],\n\t\t\t\t\tdefault: \"Last Year\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_2\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Value Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"based_on\",\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Time Series Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"based_on\",\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Time Interval\",\n\t\t\t\t\tfieldname: \"time_interval\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: [\"Yearly\", \"Quarterly\", \"Monthly\", \"Weekly\", \"Daily\"],\n\t\t\t\t\tdefault: \"Monthly\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tlabel: \"Chart Config\",\n\t\t\t\t\tdepends_on:\n\t\t\t\t\t\t'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Group By Type\",\n\t\t\t\t\tfieldname: \"group_by_type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Count\", \"Sum\", \"Average\"],\n\t\t\t\t\tdefault: \"Count\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Aggregate Function Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"aggregate_function_based_on\",\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Average\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_2\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Group By Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"group_by_based_on\",\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: \"Last Year\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Number of Groups\",\n\t\t\t\t\tfieldtype: \"Int\",\n\t\t\t\t\tfieldname: \"number_of_groups\",\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_3\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Type\",\n\t\t\t\t\tfieldname: \"type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Line\", \"Bar\", \"Percentage\", \"Pie\"],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_1\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Color\",\n\t\t\t\t\tfieldname: \"color\",\n\t\t\t\t\tfieldtype: \"Color\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == \"New Chart\") {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type =\n\t\t\t\t\t\tchart.chart_type == \"Time Series\"\n\t\t\t\t\t\t\t? chart.chart_function\n\t\t\t\t\t\t\t: chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = \"[]\";\n\t\t\t\t\tfrappe\n\t\t\t\t\t\t.xcall(\n\t\t\t\t\t\t\t\"frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart\",\n\t\t\t\t\t\t\t{ args: chart }\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.chart_group.new_widget.on_create({\n\t\t\t\t\t\t\t\tchart_name: doc.chart_name,\n\t\t\t\t\t\t\t\tname: doc.chart_name,\n\t\t\t\t\t\t\t\tlabel: chart.label,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({\n\t\t\t\t\t\tchart_name: chart.chart,\n\t\t\t\t\t\tlabel: chart.chart,\n\t\t\t\t\t\tname: chart.chart,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{ label: __(\"Created On\"), value: \"creation\" },\n\t\t\t{ label: __(\"Last Modified On\"), value: \"modified\" },\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map((df) => {\n\t\t\tif ([\"Date\", \"Datetime\"].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == \"Currency\") {\n\t\t\t\t\tif (!df.options || df.options !== \"Company:company:default_currency\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t\taggregate_function_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t\tif ([\"Link\", \"Select\"].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields,\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n};\n", "/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map((el) => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\",\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map((d) => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields = this.get_fields_in_list_view().map((el) => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter((field) => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${__(item[field])}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${__(item[field])}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.api.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map((i) => i.name),\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tthis.images_map = Object.assign(this.images_map || {}, r.message);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map,\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function (e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = class GalleryView {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function () {\n\t\t\tme.prepare();\n\t\t});\n\t}\n\tprepare() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t}\n\tprepare_pswp_items(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tconst items = this.items.map(function (i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper.find('.image-field[data-name=\"' + i._name + '\"]').get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el,\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t}\n\tshow(docname) {\n\t\tthis.lib_ready.then(() => this.prepare_pswp_items()).then(() => this._show(docname));\n\t}\n\t_show(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex((item) => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function (index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width,\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true,\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(this.pswp_root.get(0), PhotoSwipeUI_Default, items, options);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t}\n\tbrowse_images() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function () {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", (e) => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex((i) => i.name === this.pswp.currItem.name);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name,\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t}\n\tload_lib() {\n\t\treturn new Promise((resolve) => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\",\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n};\n", "/**\n * frappe.views.MapView\n */\nfrappe.provide(\"frappe.utils\");\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Map\";\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __(\"{0} Map\", [this.page_title]);\n\t}\n\n\tsetup_view() {}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords().then(() => {\n\t\t\tthis.render_map_view();\n\t\t});\n\t\tthis.$paging_area.find(\".level-left\").append(\"<div></div>\");\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = frappe.utils.map_defaults.image_path;\n\t\tthis.map = L.map(this.map_id).setView(\n\t\t\tfrappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom\n\t\t);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles, frappe.utils.map_defaults.options).addTo(\n\t\t\tthis.map\n\t\t);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach((coords) =>\n\t\t\t\tL.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method =\n\t\t\t(this.settings && this.settings.get_coords_method) || \"frappe.geo.utils.get_coords\";\n\n\t\tif (\n\t\t\tcur_list.meta.fields.find(\n\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype === \"Geolocation\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.type = \"location_field\";\n\t\t} else if (\n\t\t\tcur_list.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find((i) => i.fieldname === \"longitude\")\n\t\t) {\n\t\t\tthis.type = \"coordinates\";\n\t\t}\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: get_coords_method,\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\t\ttype: this.type,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tthis.coords = r.message;\n\t\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\",\n\t\t];\n\t}\n};\n", "export default class KanbanSettings {\n\tconstructor({ kanbanview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(__(\"DocType required\"));\n\t\t}\n\n\t\tthis.kanbanview = kanbanview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_fields();\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"show_labels\",\n\t\t\t\t\tlabel: __(\"Show Labels\"),\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\thidden: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tthis.dialog.set_values(this.settings);\n\t\tthis.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.kanban_board.kanban_board.save_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tboard_name: this.settings.name,\n\t\t\t\t\tsettings: this.dialog.get_values(),\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tthis.kanbanview.board = r.message;\n\t\t\t\t\tthis.kanbanview.render();\n\t\t\t\t\tthis.dialog.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\trefresh() {\n\t\tthis.setup_fields();\n\t\tthis.add_new_fields();\n\t\tthis.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tif (!this.settings.fields) {\n\t\t\tthis.update_fields();\n\t\t}\n\n\t\tthis.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tconst fields_html = this.dialog.get_field(\"fields_html\");\n\t\tconst wrapper = fields_html.$wrapper[0];\n\t\tlet fields = \"\";\n\n\t\tfor (let fieldname of this.fields) {\n\t\t\tlet field = this.get_docfield(fieldname);\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order sortable\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\"\n\t\t\t\t\tdata-fieldname=\"${field.fieldname}\"\n\t\t\t\t\tdata-label=\"${field.label}\"\n\t\t\t\t\tdata-type=\"${field.type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(field.label)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${field.fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">${__(\"Fields\")}</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t${__(\"+ Add / Remove Fields\")}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: (params) => {\n\t\t\t\tthis.fields.splice(params.newIndex, 0, this.fields.splice(params.oldIndex, 1)[0]);\n\t\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\t\tthis.refresh();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet add_new_fields =\n\t\t\tthis.get_dialog_fields_wrapper().getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => this.show_column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet remove_fields =\n\t\t\tthis.get_dialog_fields_wrapper().getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tthis.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tget_dialog_fields_wrapper() {\n\t\treturn this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t}\n\n\tremove_fields(fieldname) {\n\t\tthis.fields = this.fields.filter((field) => field !== fieldname);\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\tthis.refresh();\n\t}\n\n\tupdate_fields() {\n\t\tconst wrapper = this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tthis.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tthis.fields.push(fields_order.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t}\n\n\tshow_column_selector() {\n\t\tlet dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: this.get_multiselect_fields(),\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tdialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.fields = dialog.get_values().fields || [];\n\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\tthis.refresh();\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_fields() {\n\t\tthis.fields = this.settings.fields;\n\t\tthis.fields.uniqBy((f) => f.fieldname);\n\t}\n\n\tget_docfield(field_name) {\n\t\treturn (\n\t\t\tfrappe.meta.get_docfield(this.doctype, field_name) ||\n\t\t\tfrappe.model.get_std_field(field_name)\n\t\t);\n\t}\n\n\tget_multiselect_fields() {\n\t\tconst ignore_fields = [\n\t\t\t\"idx\",\n\t\t\t\"lft\",\n\t\t\t\"rgt\",\n\t\t\t\"old_parent\",\n\t\t\t\"_user_tags\",\n\t\t\t\"_liked_by\",\n\t\t\t\"_comments\",\n\t\t\t\"_assign\",\n\t\t\tthis.meta.title_field || \"name\",\n\t\t];\n\n\t\tconst ignore_fieldtypes = [\n\t\t\t\"Attach Image\",\n\t\t\t\"Text Editor\",\n\t\t\t\"HTML Editor\",\n\t\t\t\"Code\",\n\t\t\t\"Color\",\n\t\t\t...frappe.model.no_value_type,\n\t\t];\n\n\t\treturn frappe.model.std_fields\n\t\t\t.concat(this.kanbanview.get_fields_in_list_view())\n\t\t\t.filter(\n\t\t\t\t(field) =>\n\t\t\t\t\t!ignore_fields.includes(field.fieldname) &&\n\t\t\t\t\t!ignore_fieldtypes.includes(field.fieldtype)\n\t\t\t)\n\t\t\t.map((field) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: __(field.label),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: this.fields.includes(field.fieldname),\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n", "import KanbanSettings from \"./kanban_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)[\"Kanban\"] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\treturn new frappe.views.KanbanView({ doctype: doctype });\n\t\t\t}\n\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn \"Kanban\";\n\t}\n\n\tshow() {\n\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) => {\n\t\t\tif (!kanbans.length) {\n\t\t\t\treturn frappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t\t} else if (kanbans.length && frappe.get_route().length !== 4) {\n\t\t\t\treturn frappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t\t} else {\n\t\t\t\tthis.kanbans = kanbans;\n\n\t\t\t\treturn frappe.run_serially([\n\t\t\t\t\t() => this.show_skeleton(),\n\t\t\t\t\t() => this.fetch_meta(),\n\t\t\t\t\t() => this.hide_skeleton(),\n\t\t\t\t\t() => this.check_permissions(),\n\t\t\t\t\t() => this.init(),\n\t\t\t\t\t() => this.before_refresh(),\n\t\t\t\t\t() => this.refresh(),\n\t\t\t\t]);\n\t\t\t}\n\t\t});\n\t}\n\n\tinit() {\n\t\treturn super.init().then(() => {\n\t\t\tlet menu_length = this.page.menu.find(\".dropdown-item\").length;\n\t\t\tif (menu_length === 1) {\n\t\t\t\t// Only 'Refresh' (hidden) is present (always), dropdown is visibly empty\n\t\t\t\tthis.page.hide_menu();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tlet get_board_name = () => {\n\t\t\t\treturn this.kanbans.length && this.kanbans[0].name;\n\t\t\t};\n\n\t\t\tthis.board_name = frappe.get_route()[3] || get_board_name() || null;\n\t\t\tthis.page_title = __(this.board_name);\n\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\tthis.page_length = 0;\n\n\t\t\treturn frappe.run_serially([\n\t\t\t\t() => this.set_board_perms_and_push_menu_items(),\n\t\t\t\t() => this.get_board(),\n\t\t\t]);\n\t\t});\n\t}\n\n\tset_board_perms_and_push_menu_items() {\n\t\t// needs server-side call as client-side document instance is absent before kanban render\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.client.get_doc_permissions\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Kanban Board\",\n\t\t\t\tdocname: this.board_name,\n\t\t\t},\n\t\t\tcallback: (result) => {\n\t\t\t\tthis.board_perms = result.message.permissions || {};\n\t\t\t\tthis.push_menu_items();\n\t\t\t},\n\t\t});\n\t}\n\n\tpush_menu_items() {\n\t\tif (this.board_perms.write) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Save filters\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (this.board_perms.delete) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Delete Kanban Board\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.confirm(__(\"Are you sure you want to proceed?\"), () => {\n\t\t\t\t\t\tfrappe.db.delete_doc(\"Kanban Board\", this.board_name).then(() => {\n\t\t\t\t\t\t\tfrappe.show_alert(`Kanban Board ${this.board_name} deleted.`);\n\t\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"List\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc(\"Kanban Board\", this.board_name).then((board) => {\n\t\t\tthis.board = board;\n\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || \"[]\");\n\t\t\tthis.board.fields = JSON.parse(this.board.fields || \"[]\");\n\t\t\tthis.filters = this.board.filters_array;\n\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass(\"full-width\");\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, \"last_view\", this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name,\n\t\t});\n\t}\n\n\trender_list() {}\n\n\ton_filter_change() {\n\t\tif (!this.board_perms.write) return; // avoid misleading ux\n\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__(\"Not Saved\"), \"orange\");\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.db.set_value(\"Kanban Board\", this.board_name, \"filters\", filters).then((r) => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: \"red\",\n\t\t\t\t\tmessage: __(\"There was an error saving filters\"),\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: \"green\",\n\t\t\t\tmessage: __(\"Filters saved\"),\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (!this.kanban) {\n\t\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tboard: this.board,\n\t\t\t\tboard_name: board_name,\n\t\t\t\tcards: this.data,\n\t\t\t\tcard_meta: this.card_meta,\n\t\t\t\twrapper: this.$result,\n\t\t\t\tcur_list: this,\n\t\t\t\tuser_settings: this.view_user_settings,\n\t\t\t});\n\t\t} else if (board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t}\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\t// preserve route options erased by new doc\n\t\tlet route_options = { ...frappe.route_options };\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tfrappe.route_options = route_options;\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\t[\"Data\", \"Text\", \"Small Text\", \"Text Editor\"].includes(df.fieldtype) && !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (\n\t\t\tmandatory.some((df) => frappe.model.table_fields.includes(df.fieldtype)) ||\n\t\t\tmandatory.length > 1\n\t\t) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, \"name\");\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field,\n\t\t};\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"Kanban Settings\", null, \"Button in kanban view menu\"),\n\t\t\taction: () => this.show_kanban_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_kanban_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew KanbanSettings({\n\t\t\t\tkanbanview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.board,\n\t\t\t\tmeta: frappe.get_meta(this.doctype),\n\t\t\t});\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn \"kanban_board.bundle.js\";\n\t}\n};\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards().then((kanban_boards) => {\n\t\tif (kanban_boards) {\n\t\t\tkanban_boards.forEach((board) => {\n\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${\n\t\t\t\t\tboard.name\n\t\t\t\t}`;\n\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t});\n\t\t}\n\n\t\treturn kanbans;\n\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards\", { doctype })\n\t\t\t.then((r) => r.message);\n\t}\n};\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype) {\n\tlet dialog = new_kanban_dialog();\n\tdialog.show();\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board\",\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject,\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide(\"frappe.kanban_filters\");\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route(\"List\", doctype, \"Kanban\", kb.kanban_board_name);\n\t\t\t},\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog() {\n\t\t/* Kanban dialog can show either \"Save\" or \"Customize Form\" option depending if any Select fields exist in the DocType for Kanban creation\n\t\t */\n\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter((df) => {\n\t\t\treturn df.fieldtype === \"Select\" && df.fieldname !== \"kanban_column\";\n\t\t});\n\t\tconst dialog_fields = get_fields_for_dialog(select_fields);\n\t\tconst to_save = select_fields.length > 0;\n\t\tconst primary_action_label = to_save ? __(\"Save\") : __(\"Customize Form\");\n\t\tconst dialog_title = to_save ? __(\"New Kanban Board\") : __(\"No Select Field Found\");\n\n\t\tlet primary_action = () => {\n\t\t\tif (to_save) {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project).then(\n\t\t\t\t\t() => dialog.hide(),\n\t\t\t\t\t(err) => frappe.msgprint(err)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(\"Form\", \"Customize Form\", { doc_type: doctype });\n\t\t\t}\n\t\t};\n\n\t\treturn new frappe.ui.Dialog({\n\t\t\ttitle: dialog_title,\n\t\t\tfields: dialog_fields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action,\n\t\t});\n\t}\n\n\tfunction get_fields_for_dialog(select_fields) {\n\t\tif (!select_fields.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__(\n\t\t\t\t\t\t\t'No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tfieldname: \"board_name\",\n\t\t\t\tlabel: __(\"Kanban Board Name\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdescription: [\"Note\", \"ToDo\"].includes(doctype)\n\t\t\t\t\t? __(\"This Kanban Board will be private\")\n\t\t\t\t\t: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"field_name\",\n\t\t\t\tlabel: __(\"Columns based on\"),\n\t\t\t\toptions: select_fields.map((df) => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t];\n\n\t\tif (doctype === \"Task\") {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"project\",\n\t\t\t\tlabel: __(\"Project\"),\n\t\t\t\toptions: \"Project\",\n\t\t\t});\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n", "/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(\n\t\t\t\t__(\n\t\t\t\t\t\"No email account associated with the User. Please add an account under User > Email Inbox.\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find((d) => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn \"Inbox\";\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account,\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || \"communication_date\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || \"desc\";\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: \"Subject\",\n\t\t\tdf: {\n\t\t\t\tlabel: __(\"Subject\"),\n\t\t\t\tfieldname: \"subject\",\n\t\t\t},\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: \"Field\",\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? \"recipients\" : \"sender\",\n\t\t\t},\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn Boolean(doc.seen) || JSON.parse(doc._seen || \"[]\").includes(frappe.session.user)\n\t\t\t? \"\"\n\t\t\t: \"bold\";\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get().find((filter) => filter[1] === \"sent_or_received\");\n\t\treturn f && f[3] === \"Sent\";\n\t}\n\n\trender_header() {\n\t\tthis.$result.find(\".list-row-head\").remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment\n\t\t\t? `<span class=\"fa fa-paperclip fa-large\" title=\"${__(\"Has Attachments\")}\"></span>`\n\t\t\t: \"\";\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__(\"Linked with {0}\", [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\"\n\t\t\t\t? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>`\n\t\t\t\t: email.status == \"Replied\"\n\t\t\t\t? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>`\n\t\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if ([\"Spam\", \"Trash\"].includes(email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true],\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif ([\"Spam\", \"Trash\"].includes(email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\"),\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype)\n\t\t\t? `<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t`\n\t\t\t: `<p>${__(\"No Email Accounts Assigned\")}</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\temail_id: frappe.session.user_email,\n\t\t\t};\n\t\t\tfrappe.new_doc(\"Email Account\");\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`,\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\",\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\") || \"Home\";\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\t(values) => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(__(\"Folder name should not include '/' (slash)\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: \"frappe.core.api.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: (file) => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\"frappe.core.api.file.unzip_file\", {\n\t\t\t\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipped {0} files\", [r.message]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(this.get_checked_items(), this.current_folder);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () => frappe.file_manager.paste(this.current_folder))\n\t\t\t.hide();\n\n\t\tthis.page.add_actions_menu_item(__(\"Export as zip\"), () => {\n\t\t\tlet docnames = this.get_checked_items(true);\n\t\t\tif (docnames.length) {\n\t\t\t\topen_url_post(\"/api/method/frappe.core.api.file.zip_files\", {\n\t\t\t\t\tfiles: JSON.stringify(docnames),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter((df) => frappe.model.is_value_type(df.fieldtype) && !df.hidden)\n\t\t\t.map((df) => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map((d) => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\"File\", \"grid_view\", frappe.views.FileView.grid_view);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder,\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map((d) => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${d.file_url}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\t\theight: \"45px\",\n\t\t\t\t\t\t  });\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.get_route();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\t\"Select All\"\n\t\t\t  )}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Type\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(subject_html, '<span class=\"list-count\"></span>');\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder ? \"/app/List/File/\" + file.name : this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size ? frappe.form.formatters.FileSize(file.file_size) : \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${frappe.utils.escape_html(file.file_name)}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${frappe.utils.escape_html(file.file_name)}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file.file_type || \"\"}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", (e) => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\"Text\", $(e.currentTarget).attr(\"data-name\"));\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\t(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", (e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent($el.attr(\"data-name\"));\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(`File ${file_name} moved to ${folder_name}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view = frappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "import \"./frappe/ui/listing.html\";\n\nimport \"./frappe/model/indicator.js\";\nimport \"./frappe/ui/filters/filter.js\";\nimport \"./frappe/ui/filters/filter_list.js\";\nimport \"./frappe/ui/filters/field_select.js\";\nimport \"./frappe/ui/filters/edit_filter.html\";\nimport \"./frappe/ui/tags.js\";\nimport \"./frappe/ui/tag_editor.js\";\nimport \"./frappe/ui/like.js\";\n// import \"./frappe/ui/liked_by.html\";\nimport \"../html/print_template.html\";\n\nimport \"./frappe/list/base_list.js\";\nimport \"./frappe/list/list_view.js\";\nimport \"./frappe/list/list_factory.js\";\n\nimport \"./frappe/list/list_view_select.js\";\nimport \"./frappe/list/list_sidebar.js\";\nimport \"./frappe/list/list_sidebar.html\";\nimport \"./frappe/list/list_sidebar_stat.html\";\nimport \"./frappe/list/list_sidebar_group_by.js\";\nimport \"./frappe/list/list_view_permission_restrictions.html\";\n\nimport \"./frappe/views/gantt/gantt_view.js\";\nimport \"./frappe/views/calendar/calendar.js\";\nimport \"./frappe/views/dashboard/dashboard_view.js\";\nimport \"./frappe/views/image/image_view.js\";\nimport \"./frappe/views/map/map_view.js\";\nimport \"./frappe/views/kanban/kanban_view.js\";\nimport \"./frappe/views/inbox/inbox_view.js\";\nimport \"./frappe/views/file/file_view.js\";\n\nimport \"./frappe/views/treeview.js\";\nimport \"./frappe/views/interaction.js\";\n\nimport \"./frappe/views/image/image_view_item_row.html\";\nimport \"./frappe/views/image/photoswipe_dom.html\";\n\nimport \"./frappe/views/kanban/kanban_board.html\";\nimport \"./frappe/views/kanban/kanban_column.html\";\nimport \"./frappe/views/kanban/kanban_card.html\";\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide(\"frappe.views\");\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: me.title || me.subject || __(\"New Activity\"),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __(\"Create\"),\n\t\t\tprimary_action: function () {\n\t\t\t\tme.create_action();\n\t\t\t},\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function (event, attachment) {\n\t\t\tif (me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find(\"[data-file-name]:checked\").map(function () {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function (i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"' + filename + '\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Reference\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"interaction_type\",\n\t\t\t\toptions: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach((field) => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Category\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"category\",\n\t\t\t\toptions: \"\",\n\t\t\t\thidden: 1,\n\t\t\t},\n\t\t\t{ label: __(\"Public\"), fieldtype: \"Check\", fieldname: \"public\", default: \"0\" },\n\t\t\t{ fieldtype: \"Column Break\" },\n\t\t\t{ label: __(\"Date\"), fieldtype: \"Datetime\", fieldname: \"due_date\" },\n\t\t\t{\n\t\t\t\tlabel: __(\"Assigned To\"),\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"assigned_to\",\n\t\t\t\toptions: \"User\",\n\t\t\t},\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{ label: __(\"Summary\"), fieldtype: \"Data\", fieldname: \"summary\" },\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{ fieldtype: \"Text Editor\", fieldname: \"description\" },\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{\n\t\t\t\tlabel: __(\"Select Attachments\"),\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"select_attachments\",\n\t\t\t},\n\t\t];\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype(\"Event\", () => {\n\t\t\tlet categories = frappe.meta\n\t\t\t\t.get_docfield(\"Event\", \"event_category\")\n\t\t\t\t.options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values && \"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach((value) => {\n\t\t\t\tme.dialog.set_df_property(value, \"reqd\", 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach((value) => {\n\t\t\t\tme.dialog.set_df_property(value, \"hidden\", 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: \"Home/Attachments\",\n\t\t\ton_success: (attachment) => this.attachments.push(attachment),\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: \"Home/Attachments\",\n\t\t\t\ton_success: (attachment) => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\t$(\n\t\t\t\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\" +\n\t\t\t\t__(\"Select Attachments\") +\n\t\t\t\t\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \" +\n\t\t\t\t__(\"Add Attachment\") +\n\t\t\t\t\"</a></p>\"\n\t\t).appendTo(attach.empty());\n\t\tattach.find(\".add-more-attachments a\").on(\"click\", () => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach() {\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif (files.length) {\n\t\t\t$.each(files, function (i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(\n\t\t\t\t\trepl(\n\t\t\t\t\t\t'<p class=\"checkbox\">' +\n\t\t\t\t\t\t\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>' +\n\t\t\t\t\t\t\t'<span class=\"small\">%(file_name)s</span>' +\n\t\t\t\t\t\t\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">' +\n\t\t\t\t\t\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>' +\n\t\t\t\t\t\t\t\"</label></p>\",\n\t\t\t\t\t\tf\n\t\t\t\t\t)\n\t\t\t\t).appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif (!form_values) return;\n\n\t\tlet selected_attachments = $.map(\n\t\t\t$(me.dialog.wrapper).find(\"[data-file-name]:checked\"),\n\t\t\tfunction (element) {\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t}\n\t\t);\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach((value) => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] =\n\t\t\t\tform_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values) {\n\t\t\tinteraction_values[\"event_type\"] = form_values.public == 1 ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [\n\t\t\t\t{\n\t\t\t\t\treference_doctype: form_values.reference_doctype,\n\t\t\t\t\treference_docname: form_values.reference_document,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)) {\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values },\n\t\t\tbtn: btn,\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(\n\t\t\t\t\t\t__(\"There were errors while creating the document. Please try again.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.utils.file_manager.add_attachments\",\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments),\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\t\"The attachments could not be correctly linked to the new document\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nfunction get_doc_mappings() {\n\treturn {\n\t\tEvent: {\n\t\t\tfield_map: {\n\t\t\t\tinteraction_type: \"doctype\",\n\t\t\t\tsummary: \"subject\",\n\t\t\t\tdescription: \"description\",\n\t\t\t\tcategory: \"event_category\",\n\t\t\t\tdue_date: \"starts_on\",\n\t\t\t\tpublic: \"event_type\",\n\t\t\t},\n\t\t\treqd_fields: [\"summary\", \"due_date\"],\n\t\t\thidden_fields: [],\n\t\t},\n\t\tToDo: {\n\t\t\tfield_map: {\n\t\t\t\tinteraction_type: \"doctype\",\n\t\t\t\tdescription: \"description\",\n\t\t\t\tdue_date: \"date\",\n\t\t\t\treference_doctype: \"reference_type\",\n\t\t\t\treference_document: \"reference_name\",\n\t\t\t\tassigned_to: \"allocated_to\",\n\t\t\t},\n\t\t\treqd_fields: [\"description\"],\n\t\t\thidden_fields: [\"public\", \"category\"],\n\t\t},\n\t};\n}\n", "\n\tfrappe.templates['image_view_item_row'] = `<div class=\"image-view-item has-checkbox ellipsis\">\n\t<div class=\"image-view-header doclist-row\">\n\t\t<div class=\"list-value\">\n\t\t{{ subject }}\n\t\t</div>\n\t</div>\n\t<!-- Image -->\n\t<div class=\"image-view-body\">\n\t\t<a  data-name=\"{{ data.name }}\"\n\t\t\ttitle=\"{{ data.name }}\"\n\t\t\thref=\"/app/Form/{{ data.doctype }}/{{ data.name }}\"\n\t\t>\n\t\t\t<div class=\"image-field\"\n\t\t\t\tdata-name=\"{{ data.name }}\"\n\t\t\t\tstyle=\"\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t\tbackground-color: {{ color }};\n\t\t\t\t{% } %}\n\t\t\t\tborder: 0px;\"\n\t\t\t>\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t<span class=\"placeholder-text\">\n\t\t\t\t\t{%= frappe.get_abbr(data._title) %}\n\t\t\t\t</span>\n\t\t\t\t{% } %}\n\t\t\t\t{% if (data._image_url) { %}\n\t\t\t\t<img data-name=\"{{ data.name }}\" src=\"{{ data._image_url }}\" alt=\"{{data.title}}\">\n\t\t\t\t{% } %}\n\t\t\t\t<button class=\"btn btn-default zoom-view\" data-name=\"{{data.name}}\">\n\t\t\t\t\t<i class=\"fa fa-search-plus\"></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</a>\n\t</div>\n</div>\n`;\n", "\n\tfrappe.templates['photoswipe_dom'] = `\n\n<!-- http://photoswipe.com/documentation/getting-started.html -->\n<!-- Root element of PhotoSwipe. -->\n<div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n\n\t<!-- Background of PhotoSwipe.\n\t\t It's a separate element as animating opacity is faster than rgba(). -->\n\t<div class=\"pswp__bg\"></div>\n\n\t<!-- Slides wrapper with overflow:hidden. -->\n\t<div class=\"pswp__scroll-wrap\">\n\n\t\t<!-- Container that holds slides.\n\t\t\tPhotoSwipe keeps only 3 of them in the DOM to save memory.\n\t\t\tDon't modify these 3 pswp__item elements, data is added later on. -->\n\t\t<div class=\"pswp__container\">\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t</div>\n\n\t\t<div class=\"pswp__more-items\">\n\n\t\t</div>\n\n\t\t<!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n\t\t<div class=\"pswp__ui pswp__ui--hidden\">\n\n\t\t\t<div class=\"pswp__top-bar\">\n\n\t\t\t\t<!--  Controls are self-explanatory. Order can be changed. -->\n\n\t\t\t\t<div class=\"pswp__counter\"></div>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n\t\t\t\t<!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n\t\t\t\t<!-- element will get class pswp__preloader--active when preloader is running -->\n\t\t\t\t<div class=\"pswp__preloader\">\n\t\t\t\t\t<div class=\"pswp__preloader__icn\">\n\t\t\t\t\t  <div class=\"pswp__preloader__cut\">\n\t\t\t\t\t\t<div class=\"pswp__preloader__donut\"></div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n\t\t\t\t<div class=\"pswp__share-tooltip\"></div>\n\t\t\t</div>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\n\t\t\t</button>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\n\t\t\t</button>\n\n\t\t\t<div class=\"pswp__caption\">\n\t\t\t\t<div class=\"pswp__caption__center\"></div>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</div>`;\n", "\n\tfrappe.templates['kanban_board'] = `<div class=\"kanban\">\n\t<div class=\"kanban-column add-new-column\">\n\t\t<div class=\"kanban-column-title compose-column\">\n\t\t\t<a> + {{ __(\"Add Column\") }}</a>\n\t\t</div>\n\t\t<form class=\"compose-column-form kanban-column-title\">\n\t\t\t<input class=\"new-column-title\" name=\"title\" type=\"text\" autocomplete=\"off\">\n\t\t</form>\n\t</div>\n\t<div class=\"kanban-empty-state text-muted text-center\" style=\"display: none;\">\n\t\t{{ __(\"Loading...\") }}\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_column'] = `<div class=\"kanban-column\" data-column-value=\"{{title}}\">\n\t<div class=\"kanban-column-header\">\n\t\t<span class=\"kanban-column-title\">\n\t\t\t<span class=\"indicator-pill {{indicator}}\"></span>\n\t\t\t<span class=\"kanban-title ellipsis\" title=\"{{title}}\">{{ __(title) }}</span>\n\t\t</span>\n\t\t<div class=\"column-options dropdown pull-right\">\n\t\t\t<a data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t<use href=\"#icon-dot-horizontal\"></use>\n\t\t\t\t</svg>\n\t\t\t</a>\n\t\t\t<ul class=\"dropdown-menu\" style=\"max-height: 300px; overflow-y: auto;\">\n\t\t\t\t<li><a class=\"dropdown-item\" data-action=\"archive\">{{ __(\"Archive\") }}</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<div class=\"add-card\">\n\t\t<div class=\"ellipsis\">\n\t\t\t+ {{ __(\"Add {0}\", [__(doctype)]) }}\n\t\t</div>\n\t</div>\n\t<div class=\"kanban-card new-card-area\">\n\t\t<textarea name=\"title\"></textarea>\n\t</div>\n\t<div class=\"kanban-cards\">\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_card'] = `<div class=\"kanban-card-wrapper {{ disable_click }}\" data-name=\"{{encodeURIComponent(name)}}\">\n\t<div class=\"kanban-card content\">\n\t\t{% if(image_url) { %}\n\t\t<div class=\"kanban-image\">\n\t\t\t<img  src=\"{{image_url}}\" alt=\"{{title}}\">\n\t\t</div>\n\t\t{% } %}\n\t\t<div class=\"kanban-card-body\">\n\t\t\t<div class=\"kanban-title-area\">\n\t\t\t\t<a href=\"{{ form_link }}\">\n\t\t\t\t\t<div class=\"kanban-card-title ellipsis\" title=\"{{title}}\">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t\t<br>\n\t\t\t\t<div class=\"kanban-card-doc text-muted\">\n\t\t\t\t\t{{ doc_content }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"kanban-card-meta\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n"],
  "mappings": "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",
  "names": ["me", "i", "doctype", "fieldname", "me", "i", "me", "me", "me", "i", "me", "doctype", "me", "module", "i", "reports", "filter", "i", "me", "reports", "me", "me", "i", "i", "me", "i", "i", "route", "me", "i"]
}
